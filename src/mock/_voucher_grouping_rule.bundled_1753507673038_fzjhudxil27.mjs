// src/mock/voucher_grouping_rule.ts
var voucherGroupingRuleItems = [
  {
    RuleCode: "1",
    BookName: "\u7BA1\u7406\u8D26\u5957",
    RuleName: "\u5E94\u6536\u53D1\u7968",
    BookkeepingMethod: "\u666E\u901A\u8BB0\u8D26",
    GroupBy: "\u53D1\u7968\u53F7"
  },
  {
    RuleCode: "2",
    BookName: "\u7BA1\u7406\u8D26\u5957",
    RuleName: "\u5E94\u4ED8\u53D1\u7968",
    BookkeepingMethod: "\u666E\u901A\u8BB0\u8D26",
    GroupBy: "\u53D1\u7968\u53F7"
  },
  {
    RuleCode: "3",
    BookName: "\u7BA1\u7406\u8D26\u5957",
    RuleName: "\u5B9E\u6536\u5B9E\u4ED8",
    BookkeepingMethod: "\u666E\u901A\u8BB0\u8D26",
    GroupBy: "\u9500\u8D26\u7F16\u53F7"
  }
];
var voucher_grouping_rule_default = [
  // 凭证分组规则台账
  {
    url: "/api/voucher_grouping_rule",
    method: "GET",
    response: () => {
      return {
        code: 200,
        success: true,
        message: "\u8BF7\u6C42\u6210\u529F\u3002",
        data: voucherGroupingRuleItems
      };
    }
  },
  {
    url: "/api/voucher_grouping_rule/save",
    method: "POST",
    response: ({ body }) => {
      return {
        code: 200,
        success: true,
        message: "\u5F00\u59CB\u5904\u7406",
        data: body
      };
    }
  },
  {
    url: "/api/voucher_grouping_rule/save/progress",
    method: "GET",
    rawResponse: async (req, res) => {
      res.setHeader("Content-Type", "text/event-stream");
      res.setHeader("Cache-Control", "no-cache");
      res.setHeader("Connection", "keep-alive");
      res.setHeader("X-Accel-Buffering", "no");
      let progress = 0;
      const sendProgress = () => {
        const data = {
          code: 200,
          success: true,
          message: progress >= 100 ? "\u4FDD\u5B58\u6210\u529F" : "\u5904\u7406\u4E2D...",
          data: {
            progress,
            status: progress >= 100 ? "completed" : "processing",
            result: progress >= 100 ? null : null
          }
        };
        res.write(`data: ${JSON.stringify(data)}

`);
        console.log("Sending progress:", progress);
        if (progress >= 100) {
          res.end();
          return;
        }
        progress += 10;
        setTimeout(sendProgress, 1e3);
      };
      sendProgress();
    }
  }
];
export {
  voucher_grouping_rule_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsic3JjL21vY2svdm91Y2hlcl9ncm91cGluZ19ydWxlLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX2luamVjdGVkX2ZpbGVuYW1lX18gPSBcIkQ6XFxcXFdvcmtIb21lXFxcXHZpdGUtcHJvamVjdFxcXFxzcmNcXFxcbW9ja1xcXFx2b3VjaGVyX2dyb3VwaW5nX3J1bGUudHNcIjtjb25zdCBfX2luamVjdGVkX2Rpcm5hbWVfXyA9IFwiRDpcXFxcV29ya0hvbWVcXFxcdml0ZS1wcm9qZWN0XFxcXHNyY1xcXFxtb2NrXCI7Y29uc3QgX19pbmplY3RlZF9pbXBvcnRfbWV0YV91cmxfXyA9IFwiZmlsZTovLy9EOi9Xb3JrSG9tZS92aXRlLXByb2plY3Qvc3JjL21vY2svdm91Y2hlcl9ncm91cGluZ19ydWxlLnRzXCI7aW1wb3J0IE1vY2sgZnJvbSBcIm1vY2tqc1wiO1xyXG5pbXBvcnQgeyBWb3VjaGVyR3JvdXBpbmdSdWxlSXRlbVByb3BzIH0gZnJvbSBcIkAvdHlwZXMvYmFzaWNfbWFuYWdlL3ZvdWNoZXJfZ3JvdXBpbmdfcnVsZVwiO1xyXG5pbXBvcnQgeyBJbmNvbWluZ01lc3NhZ2UsIFNlcnZlclJlc3BvbnNlIH0gZnJvbSAnaHR0cCc7XHJcblxyXG4vLyBcdTRGRUVcdTZCNjNpY29uXHU3Njg0XHU3QzdCXHU1NzhCXHU5NUVFXHU5ODk4XHVGRjBDXHU1NkUwXHU0RTNBSlNYXHU1MTQzXHU3RDIwXHU0RTBEXHU4MEZEXHU0RjVDXHU0RTNBSlNPTlx1NUJGOVx1OEM2MVx1NzY4NFx1NEUwMFx1OTBFOFx1NTIwNlx1RkYwQ1x1OEZEOVx1OTFDQ1x1NURGMlx1N0VDRlx1NjUzOVx1NEUzQVx1NUI1N1x1N0IyNlx1NEUzMlxyXG5jb25zdCB2b3VjaGVyR3JvdXBpbmdSdWxlSXRlbXM6IFZvdWNoZXJHcm91cGluZ1J1bGVJdGVtUHJvcHNbXSA9IFtcclxuICB7XHJcbiAgICBSdWxlQ29kZTogJzEnLFxyXG4gICAgQm9va05hbWU6ICdcdTdCQTFcdTc0MDZcdThEMjZcdTU5NTcnLFxyXG4gICAgUnVsZU5hbWU6ICdcdTVFOTRcdTY1MzZcdTUzRDFcdTc5NjgnLFxyXG4gICAgQm9va2tlZXBpbmdNZXRob2Q6ICdcdTY2NkVcdTkwMUFcdThCQjBcdThEMjYnLFxyXG4gICAgR3JvdXBCeTogJ1x1NTNEMVx1Nzk2OFx1NTNGNycsXHJcbiAgfSxcclxuICB7XHJcbiAgICBSdWxlQ29kZTogJzInLFxyXG4gICAgQm9va05hbWU6ICdcdTdCQTFcdTc0MDZcdThEMjZcdTU5NTcnLFxyXG4gICAgUnVsZU5hbWU6ICdcdTVFOTRcdTRFRDhcdTUzRDFcdTc5NjgnLFxyXG4gICAgQm9va2tlZXBpbmdNZXRob2Q6ICdcdTY2NkVcdTkwMUFcdThCQjBcdThEMjYnLFxyXG4gICAgR3JvdXBCeTogJ1x1NTNEMVx1Nzk2OFx1NTNGNycsXHJcbiAgfSxcclxuICB7XHJcbiAgICBSdWxlQ29kZTogJzMnLFxyXG4gICAgQm9va05hbWU6ICdcdTdCQTFcdTc0MDZcdThEMjZcdTU5NTcnLFxyXG4gICAgUnVsZU5hbWU6ICdcdTVCOUVcdTY1MzZcdTVCOUVcdTRFRDgnLFxyXG4gICAgQm9va2tlZXBpbmdNZXRob2Q6ICdcdTY2NkVcdTkwMUFcdThCQjBcdThEMjYnLFxyXG4gICAgR3JvdXBCeTogJ1x1OTUwMFx1OEQyNlx1N0YxNlx1NTNGNycsXHJcbiAgfSxcclxuXTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFtcclxuICAvLyBcdTUxRURcdThCQzFcdTUyMDZcdTdFQzRcdTg5QzRcdTUyMTlcdTUzRjBcdThEMjZcclxuICB7XHJcbiAgICB1cmw6IFwiL2FwaS92b3VjaGVyX2dyb3VwaW5nX3J1bGVcIixcclxuICAgIG1ldGhvZDogXCJHRVRcIixcclxuICAgIHJlc3BvbnNlOiAoKSA9PiB7XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgY29kZTogMjAwLFxyXG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgICAgbWVzc2FnZTogXCJcdThCRjdcdTZDNDJcdTYyMTBcdTUyOUZcdTMwMDJcIixcclxuICAgICAgICBkYXRhOiB2b3VjaGVyR3JvdXBpbmdSdWxlSXRlbXMsXHJcbiAgICAgIH07XHJcbiAgICB9LFxyXG4gIH0sXHJcbiAge1xyXG4gICAgdXJsOiBcIi9hcGkvdm91Y2hlcl9ncm91cGluZ19ydWxlL3NhdmVcIixcclxuICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICByZXNwb25zZTogKHsgYm9keSB9OiB7IGJvZHk6IFZvdWNoZXJHcm91cGluZ1J1bGVJdGVtUHJvcHMgfSkgPT4ge1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIGNvZGU6IDIwMCxcclxuICAgICAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgICAgIG1lc3NhZ2U6IFwiXHU1RjAwXHU1OUNCXHU1OTA0XHU3NDA2XCIsXHJcbiAgICAgICAgZGF0YTogYm9keVxyXG4gICAgICB9O1xyXG4gICAgfVxyXG4gIH0sXHJcbiAge1xyXG4gICAgdXJsOiBcIi9hcGkvdm91Y2hlcl9ncm91cGluZ19ydWxlL3NhdmUvcHJvZ3Jlc3NcIixcclxuICAgIG1ldGhvZDogXCJHRVRcIixcclxuICAgIHJhd1Jlc3BvbnNlOiBhc3luYyAocmVxOiBJbmNvbWluZ01lc3NhZ2UsIHJlczogU2VydmVyUmVzcG9uc2UpID0+IHtcclxuICAgICAgcmVzLnNldEhlYWRlcignQ29udGVudC1UeXBlJywgJ3RleHQvZXZlbnQtc3RyZWFtJyk7XHJcbiAgICAgIHJlcy5zZXRIZWFkZXIoJ0NhY2hlLUNvbnRyb2wnLCAnbm8tY2FjaGUnKTtcclxuICAgICAgcmVzLnNldEhlYWRlcignQ29ubmVjdGlvbicsICdrZWVwLWFsaXZlJyk7XHJcbiAgICAgIHJlcy5zZXRIZWFkZXIoJ1gtQWNjZWwtQnVmZmVyaW5nJywgJ25vJyk7XHJcblxyXG4gICAgICBsZXQgcHJvZ3Jlc3MgPSAwO1xyXG5cclxuICAgICAgY29uc3Qgc2VuZFByb2dyZXNzID0gKCkgPT4ge1xyXG4gICAgICAgIGNvbnN0IGRhdGEgPSB7XHJcbiAgICAgICAgICBjb2RlOiAyMDAsXHJcbiAgICAgICAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgICAgICAgbWVzc2FnZTogcHJvZ3Jlc3MgPj0gMTAwID8gXCJcdTRGRERcdTVCNThcdTYyMTBcdTUyOUZcIiA6IFwiXHU1OTA0XHU3NDA2XHU0RTJELi4uXCIsXHJcbiAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgIHByb2dyZXNzOiBwcm9ncmVzcyxcclxuICAgICAgICAgICAgc3RhdHVzOiBwcm9ncmVzcyA+PSAxMDAgPyAnY29tcGxldGVkJyA6ICdwcm9jZXNzaW5nJyxcclxuICAgICAgICAgICAgcmVzdWx0OiBwcm9ncmVzcyA+PSAxMDAgPyBudWxsIDogbnVsbFxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHJlcy53cml0ZShgZGF0YTogJHtKU09OLnN0cmluZ2lmeShkYXRhKX1cXG5cXG5gKTtcclxuICAgICAgICBjb25zb2xlLmxvZygnU2VuZGluZyBwcm9ncmVzczonLCBwcm9ncmVzcyk7XHJcblxyXG4gICAgICAgIGlmIChwcm9ncmVzcyA+PSAxMDApIHtcclxuICAgICAgICAgIHJlcy5lbmQoKTtcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHByb2dyZXNzICs9IDEwO1xyXG4gICAgICAgIHNldFRpbWVvdXQoc2VuZFByb2dyZXNzLCAxMDAwKTtcclxuICAgICAgfTtcclxuXHJcbiAgICAgIHNlbmRQcm9ncmVzcygpO1xyXG4gICAgfVxyXG4gIH1cclxuXTsiXSwKICAibWFwcGluZ3MiOiAiO0FBS0EsSUFBTSwyQkFBMkQ7QUFBQSxFQUMvRDtBQUFBLElBQ0UsVUFBVTtBQUFBLElBQ1YsVUFBVTtBQUFBLElBQ1YsVUFBVTtBQUFBLElBQ1YsbUJBQW1CO0FBQUEsSUFDbkIsU0FBUztBQUFBLEVBQ1g7QUFBQSxFQUNBO0FBQUEsSUFDRSxVQUFVO0FBQUEsSUFDVixVQUFVO0FBQUEsSUFDVixVQUFVO0FBQUEsSUFDVixtQkFBbUI7QUFBQSxJQUNuQixTQUFTO0FBQUEsRUFDWDtBQUFBLEVBQ0E7QUFBQSxJQUNFLFVBQVU7QUFBQSxJQUNWLFVBQVU7QUFBQSxJQUNWLFVBQVU7QUFBQSxJQUNWLG1CQUFtQjtBQUFBLElBQ25CLFNBQVM7QUFBQSxFQUNYO0FBQ0Y7QUFFQSxJQUFPLGdDQUFRO0FBQUE7QUFBQSxFQUViO0FBQUEsSUFDRSxLQUFLO0FBQUEsSUFDTCxRQUFRO0FBQUEsSUFDUixVQUFVLE1BQU07QUFDZCxhQUFPO0FBQUEsUUFDTCxNQUFNO0FBQUEsUUFDTixTQUFTO0FBQUEsUUFDVCxTQUFTO0FBQUEsUUFDVCxNQUFNO0FBQUEsTUFDUjtBQUFBLElBQ0Y7QUFBQSxFQUNGO0FBQUEsRUFDQTtBQUFBLElBQ0UsS0FBSztBQUFBLElBQ0wsUUFBUTtBQUFBLElBQ1IsVUFBVSxDQUFDLEVBQUUsS0FBSyxNQUE4QztBQUM5RCxhQUFPO0FBQUEsUUFDTCxNQUFNO0FBQUEsUUFDTixTQUFTO0FBQUEsUUFDVCxTQUFTO0FBQUEsUUFDVCxNQUFNO0FBQUEsTUFDUjtBQUFBLElBQ0Y7QUFBQSxFQUNGO0FBQUEsRUFDQTtBQUFBLElBQ0UsS0FBSztBQUFBLElBQ0wsUUFBUTtBQUFBLElBQ1IsYUFBYSxPQUFPLEtBQXNCLFFBQXdCO0FBQ2hFLFVBQUksVUFBVSxnQkFBZ0IsbUJBQW1CO0FBQ2pELFVBQUksVUFBVSxpQkFBaUIsVUFBVTtBQUN6QyxVQUFJLFVBQVUsY0FBYyxZQUFZO0FBQ3hDLFVBQUksVUFBVSxxQkFBcUIsSUFBSTtBQUV2QyxVQUFJLFdBQVc7QUFFZixZQUFNLGVBQWUsTUFBTTtBQUN6QixjQUFNLE9BQU87QUFBQSxVQUNYLE1BQU07QUFBQSxVQUNOLFNBQVM7QUFBQSxVQUNULFNBQVMsWUFBWSxNQUFNLDZCQUFTO0FBQUEsVUFDcEMsTUFBTTtBQUFBLFlBQ0o7QUFBQSxZQUNBLFFBQVEsWUFBWSxNQUFNLGNBQWM7QUFBQSxZQUN4QyxRQUFRLFlBQVksTUFBTSxPQUFPO0FBQUEsVUFDbkM7QUFBQSxRQUNGO0FBRUEsWUFBSSxNQUFNLFNBQVMsS0FBSyxVQUFVLElBQUksQ0FBQztBQUFBO0FBQUEsQ0FBTTtBQUM3QyxnQkFBUSxJQUFJLHFCQUFxQixRQUFRO0FBRXpDLFlBQUksWUFBWSxLQUFLO0FBQ25CLGNBQUksSUFBSTtBQUNSO0FBQUEsUUFDRjtBQUVBLG9CQUFZO0FBQ1osbUJBQVcsY0FBYyxHQUFJO0FBQUEsTUFDL0I7QUFFQSxtQkFBYTtBQUFBLElBQ2Y7QUFBQSxFQUNGO0FBQ0Y7IiwKICAibmFtZXMiOiBbXQp9Cg==
