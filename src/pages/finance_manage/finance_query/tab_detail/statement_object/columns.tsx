
import { TableColumnsType, Tag, Popconfirm } from 'antd';
import { StatementObjectItemProps } from "@/types/finance_manage/statement_object";
import i18n from '@/i18n';
import LocaleHelper from '@/utils/locale';



export const getColumns = (handleEdit: (record: StatementObjectItemProps) => void, handleDelete: (record: StatementObjectItemProps) => void): TableColumnsType<StatementObjectItemProps> => [
{
        title: i18n.t(LocaleHelper.getStatementObjectSettlementObject()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'SettlementObject',
        sorter: true,
        align: 'left',
        fixed: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectMonthlySettlementTicketSettlement()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'MonthlySettlementTicketSettlement',
        sorter: true,
        align: 'left',
        fixed: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectUsdReceivable()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'UsdReceivable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectUsdPayable()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'UsdPayable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectCnyReceivable()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'CnyReceivable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectCnyReceived()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'CnyReceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectCnyPayable()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'CnyPayable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectCnyPaid()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'CnyPaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectEurReceivable()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'EurReceivable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectEurPayable()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'EurPayable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectHkdReceivable()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'HkdReceivable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectHkdPayable()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'HkdPayable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectNgnReceivable()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'NgnReceivable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectNgnReceived()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'NgnReceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectNgnPaid()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'NgnPaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectNgnPayable()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'NgnPayable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectGbpReceivable()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'GbpReceivable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectGbpPayable()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'GbpPayable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectJpyReceivable()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'JpyReceivable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectJpyPayable()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'JpyPayable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectJpyReceived()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'JpyReceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectJpyPaid()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'JpyPaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherCnyReceivable()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherCnyReceivable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherCnyReceived()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherCnyReceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherCnyPayable()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherCnyPayable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherCnyPaid()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherCnyPaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherEurReceivable()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherEurReceivable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherEurPayable()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherEurPayable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherEurReceived()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherEurReceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherEurPaid()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherEurPaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherHkdReceivable()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherHkdReceivable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherHkdPayable()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherHkdPayable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherHkdReceived()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherHkdReceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherHkdPaid()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherHkdPaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherGbpReceivable()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherGbpReceivable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherGbpPayable()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherGbpPayable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherJpyReceivable()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherJpyReceivable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherJpyPayable()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherJpyPayable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherNgnReceivable()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherNgnReceivable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherNgnPayable()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherNgnPayable',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherNgnReceived()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherNgnReceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherNgnPaid()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherNgnPaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectEquivalentCnyReceived()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'EquivalentCnyReceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectEquivalentCnyPaid()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'EquivalentCnyPaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectUsdUnreceived()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'UsdUnreceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectUsdReceived()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'UsdReceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectUsdPaid()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'UsdPaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectUsdUnpaid()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'UsdUnpaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectCnyUnreceived()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'CnyUnreceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectCnyUnpaid()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'CnyUnpaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectEurUnreceived()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'EurUnreceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectEurReceived()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'EurReceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectEurPaid()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'EurPaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectEurUnpaid()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'EurUnpaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectHkdUnreceived()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'HkdUnreceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectHkdReceived()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'HkdReceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectHkdPaid()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'HkdPaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectHkdUnpaid()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'HkdUnpaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectGbpUnreceived()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'GbpUnreceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectGbpUnpaid()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'GbpUnpaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectJpyUnreceived()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'JpyUnreceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectJpyUnpaid()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'JpyUnpaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectNgnUnreceived()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'NgnUnreceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectNgnUnpaid()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'NgnUnpaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherCnyUnreceived()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherCnyUnreceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherCnyUnpaid()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherCnyUnpaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherEurUnreceived()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherEurUnreceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherEurUnpaid()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherEurUnpaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherHkdUnreceived()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherHkdUnreceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherHkdUnpaid()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherHkdUnpaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherGbpUnreceived()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherGbpUnreceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherGbpUnpaid()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherGbpUnpaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherJpyUnreceived()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherJpyUnreceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherJpyUnpaid()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherJpyUnpaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherNgnUnreceived()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherNgnUnreceived',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectOtherNgnUnpaid()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OtherNgnUnpaid',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectDeliveryDate()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'DeliveryDate',
        sorter: true,
        align: 'center',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectArrivalDate()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'ArrivalDate',
        sorter: true,
        align: 'center',
    },
    {
        title: i18n.t(LocaleHelper.getStatementObjectDocuments()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'Documents',
        sorter: true,
        align: 'left',
    },
]; 

export const getStatementObjectSumColumns = () => [
    {
        title: '',
        width: 60,
        dataIndex: 'sum_title',
        align: 'left',
    },
    {
        title: 'RMB',
        width: 100,
        dataIndex: 'rmb',
        align: 'right',
        render: (text:any) => (
            new Intl.NumberFormat('zh-CN', { style: 'decimal' }).format(text)
        ),
        
    },
    {
        title: 'USD',
        width: 100,
        dataIndex: 'usd',
        align: 'right',
        render: (text:any) => (
            new Intl.NumberFormat('zh-CN', { style: 'decimal' }).format(text)
        ),
    },
    {
        title: 'EUR',
        width: 100,
        dataIndex: 'eur',
        align: 'right',
        render: (text:any) => (
            new Intl.NumberFormat('zh-CN', { style: 'decimal' }).format(text)
        ),
    },
]; 
