
import { TableColumnsType, Tag, Popconfirm } from 'antd';
import { InvoiceItemProps } from "@/types/cost_manage/invoice";
import i18n from '@/i18n';
import LocaleHelper from '@/utils/localeHelper';



export const getColumns = (handleEdit: (record: InvoiceItemProps) => void, handleDelete: (record: InvoiceItemProps) => void): TableColumnsType<InvoiceItemProps> => [
    {
        title: i18n.t(LocaleHelper.getInvoiceInvoiceId()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'InvoiceId',
        sorter: true,
        align: 'left',
        fixed: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceInvoiceNumber()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'InvoiceNumber',
        sorter: true,
        align: 'left',
        fixed: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceBillingTitle()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'BillingTitle',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceBusinessNumber()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'BusinessNumber',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceMbl()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'Mbl',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceSettlementUnit()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'SettlementUnit',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceInvoiceCreator()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'InvoiceCreator',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceInvoiceCreateTime()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'InvoiceCreateTime',
        sorter: true,
        align: 'center',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceReviewStatus()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'ReviewStatus',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceReviewer()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'Reviewer',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceReviewDate()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'ReviewDate',
        sorter: true,
        align: 'center',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceInvoiceType()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'InvoiceType',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoicePaymentTerm()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'PaymentTerm',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceCustomerDownloadCount()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'CustomerDownloadCount',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceBillingDate()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'BillingDate',
        sorter: true,
        align: 'center',
    },
    {
        title: i18n.t(LocaleHelper.getInvoicePaymentNoticeNumber()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'PaymentNoticeNumber',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceEtd()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'Etd',
        sorter: true,
        align: 'center',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceEta()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'Eta',
        sorter: true,
        align: 'center',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceDestinationPort()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'DestinationPort',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceWriteOffStatus()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'WriteOffStatus',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceRedCreditStatus()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'RedCreditStatus',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceIsPrinted()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'IsPrinted',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceIsVoided()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'IsVoided',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceVesselVoyage()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'VesselVoyage',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoicePortOfDeparture()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'PortOfDeparture',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceIsExported()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'IsExported',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceInvoiceCategory()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'InvoiceCategory',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceBillingMethod()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'BillingMethod',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoicePaymentType()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'PaymentType',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceBillingCurrency()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'BillingCurrency',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceInvoiceExchangeRate()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'InvoiceExchangeRate',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceAmount()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'Amount',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceWriteOffAmount()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'WriteOffAmount',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceTaxRate()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'TaxRate',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceTaxAmount()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'TaxAmount',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceTaxExcludedAmount()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'TaxExcludedAmount',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceBillingApplicant()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'BillingApplicant',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceCurrencyTotal()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'CurrencyTotal',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceOperation()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'Operation',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceSales()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'Sales',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceSalesUnit()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'SalesUnit',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceDeliveryLocation()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'DeliveryLocation',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceOurBank()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OurBank',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceOurBankCurrency()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'OurBankCurrency',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceEInvoiceSendStatus()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'EInvoiceSendStatus',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceEInvoiceEmailStatus()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'EInvoiceEmailStatus',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceSpecificConstraintType()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'SpecificConstraintType',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceRedCreditReason()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'RedCreditReason',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceTaxControlRequest()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'TaxControlRequest',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceBillingSettlementType()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'BillingSettlementType',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceWriteOffSerialNumber()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'WriteOffSerialNumber',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getInvoicePaymentDate()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'PaymentDate',
        sorter: true,
        align: 'center',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceCurrencyRate1()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'CurrencyRate1',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getInvoiceCurrencyRate2()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'CurrencyRate2',
        sorter: true,
        align: 'right',
    },
    {
        title: '操作',
        key: 'operation',
        fixed: 'right',
        width: 40,
        render: (_, record) => (
        <>
            <a onClick={()=>handleEdit(record)}>详细</a>
        </>
        ),
    },
]; 

export const getInvoiceSumColumns = () => [
    {
        title: '',
        width: 60,
        dataIndex: 'sum_title',
        align: 'left',
    },
    {
        title: 'RMB',
        width: 100,
        dataIndex: 'rmb',
        align: 'right',
        render: (text:any) => (
            new Intl.NumberFormat('zh-CN', { style: 'decimal' }).format(text)
        ),
        
    },
]; 

