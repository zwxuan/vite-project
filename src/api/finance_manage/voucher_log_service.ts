
import request, {ApiRes,requestWithProgress } from '../request'
import { VoucherLogItemProps } from "@/types/finance_manage/voucher_log/voucher_log";
import Mock from "mockjs";
//
const voucherLogItems:VoucherLogItemProps[] = [
    {
        VoucherSerialNo:Mock.mock("@id"),
        VoucherNo:Mock.mock('@ctitle(5)'),
        VoucherType:Mock.mock('@ctitle(5)'),
        VoucherDebitCreditTotal:Mock.mock('@float(60, 100, 0, 2)'),
        VoucherStatus:Mock.mock('@ctitle(5)'),
        VoucherDate:Mock.mock('@datetime()'),
        VoucherStatus2:Mock.mock('@ctitle(5)'),
        CounterpartyVoucherNo:Mock.mock('@ctitle(5)'),
        DebitAmount:Mock.mock('@float(60, 100, 0, 2)'),
        CreditAmount:Mock.mock('@float(60, 100, 0, 2)'),
        SendStatus:Mock.mock('@ctitle(5)'),
        DeleteStatus:Mock.mock('@ctitle(5)'),
        Creator:Mock.mock('@ctitle(5)'),
        CreateDate:Mock.mock('@datetime()'),
        Sender:Mock.mock('@ctitle(5)'),
        SendDate:Mock.mock('@datetime()'),
    },  
    {
        VoucherSerialNo:Mock.mock("@id"),
        VoucherNo:Mock.mock('@ctitle(5)'),
        VoucherType:Mock.mock('@ctitle(5)'),
        VoucherDebitCreditTotal:Mock.mock('@float(60, 100, 0, 2)'),
        VoucherStatus:Mock.mock('@ctitle(5)'),
        VoucherDate:Mock.mock('@datetime()'),
        VoucherStatus2:Mock.mock('@ctitle(5)'),
        CounterpartyVoucherNo:Mock.mock('@ctitle(5)'),
        DebitAmount:Mock.mock('@float(60, 100, 0, 2)'),
        CreditAmount:Mock.mock('@float(60, 100, 0, 2)'),
        SendStatus:Mock.mock('@ctitle(5)'),
        DeleteStatus:Mock.mock('@ctitle(5)'),
        Creator:Mock.mock('@ctitle(5)'),
        CreateDate:Mock.mock('@datetime()'),
        Sender:Mock.mock('@ctitle(5)'),
        SendDate:Mock.mock('@datetime()'),
    },  
    {
        VoucherSerialNo:Mock.mock("@id"),
        VoucherNo:Mock.mock('@ctitle(5)'),
        VoucherType:Mock.mock('@ctitle(5)'),
        VoucherDebitCreditTotal:Mock.mock('@float(60, 100, 0, 2)'),
        VoucherStatus:Mock.mock('@ctitle(5)'),
        VoucherDate:Mock.mock('@datetime()'),
        VoucherStatus2:Mock.mock('@ctitle(5)'),
        CounterpartyVoucherNo:Mock.mock('@ctitle(5)'),
        DebitAmount:Mock.mock('@float(60, 100, 0, 2)'),
        CreditAmount:Mock.mock('@float(60, 100, 0, 2)'),
        SendStatus:Mock.mock('@ctitle(5)'),
        DeleteStatus:Mock.mock('@ctitle(5)'),
        Creator:Mock.mock('@ctitle(5)'),
        CreateDate:Mock.mock('@datetime()'),
        Sender:Mock.mock('@ctitle(5)'),
        SendDate:Mock.mock('@datetime()'),
    },  
    {
        VoucherSerialNo:Mock.mock("@id"),
        VoucherNo:Mock.mock('@ctitle(5)'),
        VoucherType:Mock.mock('@ctitle(5)'),
        VoucherDebitCreditTotal:Mock.mock('@float(60, 100, 0, 2)'),
        VoucherStatus:Mock.mock('@ctitle(5)'),
        VoucherDate:Mock.mock('@datetime()'),
        VoucherStatus2:Mock.mock('@ctitle(5)'),
        CounterpartyVoucherNo:Mock.mock('@ctitle(5)'),
        DebitAmount:Mock.mock('@float(60, 100, 0, 2)'),
        CreditAmount:Mock.mock('@float(60, 100, 0, 2)'),
        SendStatus:Mock.mock('@ctitle(5)'),
        DeleteStatus:Mock.mock('@ctitle(5)'),
        Creator:Mock.mock('@ctitle(5)'),
        CreateDate:Mock.mock('@datetime()'),
        Sender:Mock.mock('@ctitle(5)'),
        SendDate:Mock.mock('@datetime()'),
    },  
    {
        VoucherSerialNo:Mock.mock("@id"),
        VoucherNo:Mock.mock('@ctitle(5)'),
        VoucherType:Mock.mock('@ctitle(5)'),
        VoucherDebitCreditTotal:Mock.mock('@float(60, 100, 0, 2)'),
        VoucherStatus:Mock.mock('@ctitle(5)'),
        VoucherDate:Mock.mock('@datetime()'),
        VoucherStatus2:Mock.mock('@ctitle(5)'),
        CounterpartyVoucherNo:Mock.mock('@ctitle(5)'),
        DebitAmount:Mock.mock('@float(60, 100, 0, 2)'),
        CreditAmount:Mock.mock('@float(60, 100, 0, 2)'),
        SendStatus:Mock.mock('@ctitle(5)'),
        DeleteStatus:Mock.mock('@ctitle(5)'),
        Creator:Mock.mock('@ctitle(5)'),
        CreateDate:Mock.mock('@datetime()'),
        Sender:Mock.mock('@ctitle(5)'),
        SendDate:Mock.mock('@datetime()'),
    },  
    {
        VoucherSerialNo:Mock.mock("@id"),
        VoucherNo:Mock.mock('@ctitle(5)'),
        VoucherType:Mock.mock('@ctitle(5)'),
        VoucherDebitCreditTotal:Mock.mock('@float(60, 100, 0, 2)'),
        VoucherStatus:Mock.mock('@ctitle(5)'),
        VoucherDate:Mock.mock('@datetime()'),
        VoucherStatus2:Mock.mock('@ctitle(5)'),
        CounterpartyVoucherNo:Mock.mock('@ctitle(5)'),
        DebitAmount:Mock.mock('@float(60, 100, 0, 2)'),
        CreditAmount:Mock.mock('@float(60, 100, 0, 2)'),
        SendStatus:Mock.mock('@ctitle(5)'),
        DeleteStatus:Mock.mock('@ctitle(5)'),
        Creator:Mock.mock('@ctitle(5)'),
        CreateDate:Mock.mock('@datetime()'),
        Sender:Mock.mock('@ctitle(5)'),
        SendDate:Mock.mock('@datetime()'),
    },  
    {
        VoucherSerialNo:Mock.mock("@id"),
        VoucherNo:Mock.mock('@ctitle(5)'),
        VoucherType:Mock.mock('@ctitle(5)'),
        VoucherDebitCreditTotal:Mock.mock('@float(60, 100, 0, 2)'),
        VoucherStatus:Mock.mock('@ctitle(5)'),
        VoucherDate:Mock.mock('@datetime()'),
        VoucherStatus2:Mock.mock('@ctitle(5)'),
        CounterpartyVoucherNo:Mock.mock('@ctitle(5)'),
        DebitAmount:Mock.mock('@float(60, 100, 0, 2)'),
        CreditAmount:Mock.mock('@float(60, 100, 0, 2)'),
        SendStatus:Mock.mock('@ctitle(5)'),
        DeleteStatus:Mock.mock('@ctitle(5)'),
        Creator:Mock.mock('@ctitle(5)'),
        CreateDate:Mock.mock('@datetime()'),
        Sender:Mock.mock('@ctitle(5)'),
        SendDate:Mock.mock('@datetime()'),
    },  
    {
        VoucherSerialNo:Mock.mock("@id"),
        VoucherNo:Mock.mock('@ctitle(5)'),
        VoucherType:Mock.mock('@ctitle(5)'),
        VoucherDebitCreditTotal:Mock.mock('@float(60, 100, 0, 2)'),
        VoucherStatus:Mock.mock('@ctitle(5)'),
        VoucherDate:Mock.mock('@datetime()'),
        VoucherStatus2:Mock.mock('@ctitle(5)'),
        CounterpartyVoucherNo:Mock.mock('@ctitle(5)'),
        DebitAmount:Mock.mock('@float(60, 100, 0, 2)'),
        CreditAmount:Mock.mock('@float(60, 100, 0, 2)'),
        SendStatus:Mock.mock('@ctitle(5)'),
        DeleteStatus:Mock.mock('@ctitle(5)'),
        Creator:Mock.mock('@ctitle(5)'),
        CreateDate:Mock.mock('@datetime()'),
        Sender:Mock.mock('@ctitle(5)'),
        SendDate:Mock.mock('@datetime()'),
    },  
    {
        VoucherSerialNo:Mock.mock("@id"),
        VoucherNo:Mock.mock('@ctitle(5)'),
        VoucherType:Mock.mock('@ctitle(5)'),
        VoucherDebitCreditTotal:Mock.mock('@float(60, 100, 0, 2)'),
        VoucherStatus:Mock.mock('@ctitle(5)'),
        VoucherDate:Mock.mock('@datetime()'),
        VoucherStatus2:Mock.mock('@ctitle(5)'),
        CounterpartyVoucherNo:Mock.mock('@ctitle(5)'),
        DebitAmount:Mock.mock('@float(60, 100, 0, 2)'),
        CreditAmount:Mock.mock('@float(60, 100, 0, 2)'),
        SendStatus:Mock.mock('@ctitle(5)'),
        DeleteStatus:Mock.mock('@ctitle(5)'),
        Creator:Mock.mock('@ctitle(5)'),
        CreateDate:Mock.mock('@datetime()'),
        Sender:Mock.mock('@ctitle(5)'),
        SendDate:Mock.mock('@datetime()'),
    },  
    {
        VoucherSerialNo:Mock.mock("@id"),
        VoucherNo:Mock.mock('@ctitle(5)'),
        VoucherType:Mock.mock('@ctitle(5)'),
        VoucherDebitCreditTotal:Mock.mock('@float(60, 100, 0, 2)'),
        VoucherStatus:Mock.mock('@ctitle(5)'),
        VoucherDate:Mock.mock('@datetime()'),
        VoucherStatus2:Mock.mock('@ctitle(5)'),
        CounterpartyVoucherNo:Mock.mock('@ctitle(5)'),
        DebitAmount:Mock.mock('@float(60, 100, 0, 2)'),
        CreditAmount:Mock.mock('@float(60, 100, 0, 2)'),
        SendStatus:Mock.mock('@ctitle(5)'),
        DeleteStatus:Mock.mock('@ctitle(5)'),
        Creator:Mock.mock('@ctitle(5)'),
        CreateDate:Mock.mock('@datetime()'),
        Sender:Mock.mock('@ctitle(5)'),
        SendDate:Mock.mock('@datetime()'),
    },  
    {
        VoucherSerialNo:Mock.mock("@id"),
        VoucherNo:Mock.mock('@ctitle(5)'),
        VoucherType:Mock.mock('@ctitle(5)'),
        VoucherDebitCreditTotal:Mock.mock('@float(60, 100, 0, 2)'),
        VoucherStatus:Mock.mock('@ctitle(5)'),
        VoucherDate:Mock.mock('@datetime()'),
        VoucherStatus2:Mock.mock('@ctitle(5)'),
        CounterpartyVoucherNo:Mock.mock('@ctitle(5)'),
        DebitAmount:Mock.mock('@float(60, 100, 0, 2)'),
        CreditAmount:Mock.mock('@float(60, 100, 0, 2)'),
        SendStatus:Mock.mock('@ctitle(5)'),
        DeleteStatus:Mock.mock('@ctitle(5)'),
        Creator:Mock.mock('@ctitle(5)'),
        CreateDate:Mock.mock('@datetime()'),
        Sender:Mock.mock('@ctitle(5)'),
        SendDate:Mock.mock('@datetime()'),
    },  
    {
        VoucherSerialNo:Mock.mock("@id"),
        VoucherNo:Mock.mock('@ctitle(5)'),
        VoucherType:Mock.mock('@ctitle(5)'),
        VoucherDebitCreditTotal:Mock.mock('@float(60, 100, 0, 2)'),
        VoucherStatus:Mock.mock('@ctitle(5)'),
        VoucherDate:Mock.mock('@datetime()'),
        VoucherStatus2:Mock.mock('@ctitle(5)'),
        CounterpartyVoucherNo:Mock.mock('@ctitle(5)'),
        DebitAmount:Mock.mock('@float(60, 100, 0, 2)'),
        CreditAmount:Mock.mock('@float(60, 100, 0, 2)'),
        SendStatus:Mock.mock('@ctitle(5)'),
        DeleteStatus:Mock.mock('@ctitle(5)'),
        Creator:Mock.mock('@ctitle(5)'),
        CreateDate:Mock.mock('@datetime()'),
        Sender:Mock.mock('@ctitle(5)'),
        SendDate:Mock.mock('@datetime()'),
    },  
    {
        VoucherSerialNo:Mock.mock("@id"),
        VoucherNo:Mock.mock('@ctitle(5)'),
        VoucherType:Mock.mock('@ctitle(5)'),
        VoucherDebitCreditTotal:Mock.mock('@float(60, 100, 0, 2)'),
        VoucherStatus:Mock.mock('@ctitle(5)'),
        VoucherDate:Mock.mock('@datetime()'),
        VoucherStatus2:Mock.mock('@ctitle(5)'),
        CounterpartyVoucherNo:Mock.mock('@ctitle(5)'),
        DebitAmount:Mock.mock('@float(60, 100, 0, 2)'),
        CreditAmount:Mock.mock('@float(60, 100, 0, 2)'),
        SendStatus:Mock.mock('@ctitle(5)'),
        DeleteStatus:Mock.mock('@ctitle(5)'),
        Creator:Mock.mock('@ctitle(5)'),
        CreateDate:Mock.mock('@datetime()'),
        Sender:Mock.mock('@ctitle(5)'),
        SendDate:Mock.mock('@datetime()'),
    },  
    {
        VoucherSerialNo:Mock.mock("@id"),
        VoucherNo:Mock.mock('@ctitle(5)'),
        VoucherType:Mock.mock('@ctitle(5)'),
        VoucherDebitCreditTotal:Mock.mock('@float(60, 100, 0, 2)'),
        VoucherStatus:Mock.mock('@ctitle(5)'),
        VoucherDate:Mock.mock('@datetime()'),
        VoucherStatus2:Mock.mock('@ctitle(5)'),
        CounterpartyVoucherNo:Mock.mock('@ctitle(5)'),
        DebitAmount:Mock.mock('@float(60, 100, 0, 2)'),
        CreditAmount:Mock.mock('@float(60, 100, 0, 2)'),
        SendStatus:Mock.mock('@ctitle(5)'),
        DeleteStatus:Mock.mock('@ctitle(5)'),
        Creator:Mock.mock('@ctitle(5)'),
        CreateDate:Mock.mock('@datetime()'),
        Sender:Mock.mock('@ctitle(5)'),
        SendDate:Mock.mock('@datetime()'),
    },  
    {
        VoucherSerialNo:Mock.mock("@id"),
        VoucherNo:Mock.mock('@ctitle(5)'),
        VoucherType:Mock.mock('@ctitle(5)'),
        VoucherDebitCreditTotal:Mock.mock('@float(60, 100, 0, 2)'),
        VoucherStatus:Mock.mock('@ctitle(5)'),
        VoucherDate:Mock.mock('@datetime()'),
        VoucherStatus2:Mock.mock('@ctitle(5)'),
        CounterpartyVoucherNo:Mock.mock('@ctitle(5)'),
        DebitAmount:Mock.mock('@float(60, 100, 0, 2)'),
        CreditAmount:Mock.mock('@float(60, 100, 0, 2)'),
        SendStatus:Mock.mock('@ctitle(5)'),
        DeleteStatus:Mock.mock('@ctitle(5)'),
        Creator:Mock.mock('@ctitle(5)'),
        CreateDate:Mock.mock('@datetime()'),
        Sender:Mock.mock('@ctitle(5)'),
        SendDate:Mock.mock('@datetime()'),
    },  
    {
        VoucherSerialNo:Mock.mock("@id"),
        VoucherNo:Mock.mock('@ctitle(5)'),
        VoucherType:Mock.mock('@ctitle(5)'),
        VoucherDebitCreditTotal:Mock.mock('@float(60, 100, 0, 2)'),
        VoucherStatus:Mock.mock('@ctitle(5)'),
        VoucherDate:Mock.mock('@datetime()'),
        VoucherStatus2:Mock.mock('@ctitle(5)'),
        CounterpartyVoucherNo:Mock.mock('@ctitle(5)'),
        DebitAmount:Mock.mock('@float(60, 100, 0, 2)'),
        CreditAmount:Mock.mock('@float(60, 100, 0, 2)'),
        SendStatus:Mock.mock('@ctitle(5)'),
        DeleteStatus:Mock.mock('@ctitle(5)'),
        Creator:Mock.mock('@ctitle(5)'),
        CreateDate:Mock.mock('@datetime()'),
        Sender:Mock.mock('@ctitle(5)'),
        SendDate:Mock.mock('@datetime()'),
    },  
    {
        VoucherSerialNo:Mock.mock("@id"),
        VoucherNo:Mock.mock('@ctitle(5)'),
        VoucherType:Mock.mock('@ctitle(5)'),
        VoucherDebitCreditTotal:Mock.mock('@float(60, 100, 0, 2)'),
        VoucherStatus:Mock.mock('@ctitle(5)'),
        VoucherDate:Mock.mock('@datetime()'),
        VoucherStatus2:Mock.mock('@ctitle(5)'),
        CounterpartyVoucherNo:Mock.mock('@ctitle(5)'),
        DebitAmount:Mock.mock('@float(60, 100, 0, 2)'),
        CreditAmount:Mock.mock('@float(60, 100, 0, 2)'),
        SendStatus:Mock.mock('@ctitle(5)'),
        DeleteStatus:Mock.mock('@ctitle(5)'),
        Creator:Mock.mock('@ctitle(5)'),
        CreateDate:Mock.mock('@datetime()'),
        Sender:Mock.mock('@ctitle(5)'),
        SendDate:Mock.mock('@datetime()'),
    },  
    {
        VoucherSerialNo:Mock.mock("@id"),
        VoucherNo:Mock.mock('@ctitle(5)'),
        VoucherType:Mock.mock('@ctitle(5)'),
        VoucherDebitCreditTotal:Mock.mock('@float(60, 100, 0, 2)'),
        VoucherStatus:Mock.mock('@ctitle(5)'),
        VoucherDate:Mock.mock('@datetime()'),
        VoucherStatus2:Mock.mock('@ctitle(5)'),
        CounterpartyVoucherNo:Mock.mock('@ctitle(5)'),
        DebitAmount:Mock.mock('@float(60, 100, 0, 2)'),
        CreditAmount:Mock.mock('@float(60, 100, 0, 2)'),
        SendStatus:Mock.mock('@ctitle(5)'),
        DeleteStatus:Mock.mock('@ctitle(5)'),
        Creator:Mock.mock('@ctitle(5)'),
        CreateDate:Mock.mock('@datetime()'),
        Sender:Mock.mock('@ctitle(5)'),
        SendDate:Mock.mock('@datetime()'),
    },  
    {
        VoucherSerialNo:Mock.mock("@id"),
        VoucherNo:Mock.mock('@ctitle(5)'),
        VoucherType:Mock.mock('@ctitle(5)'),
        VoucherDebitCreditTotal:Mock.mock('@float(60, 100, 0, 2)'),
        VoucherStatus:Mock.mock('@ctitle(5)'),
        VoucherDate:Mock.mock('@datetime()'),
        VoucherStatus2:Mock.mock('@ctitle(5)'),
        CounterpartyVoucherNo:Mock.mock('@ctitle(5)'),
        DebitAmount:Mock.mock('@float(60, 100, 0, 2)'),
        CreditAmount:Mock.mock('@float(60, 100, 0, 2)'),
        SendStatus:Mock.mock('@ctitle(5)'),
        DeleteStatus:Mock.mock('@ctitle(5)'),
        Creator:Mock.mock('@ctitle(5)'),
        CreateDate:Mock.mock('@datetime()'),
        Sender:Mock.mock('@ctitle(5)'),
        SendDate:Mock.mock('@datetime()'),
    },  
];


// 获取账单管理台账列表
export const getVoucherLogList = async (): Promise<VoucherLogItemProps[]> => {
  return voucherLogItems;
}

// 保存账单管理
export const saveVoucherLog = async (data: VoucherLogItemProps, onUploadProgress?: (progress: number) => void): Promise<VoucherLogItemProps> => {
  // 模拟上传进度
  if (onUploadProgress) {
    let progress = 0;
    const interval = setInterval(() => {
      progress += 10;
      onUploadProgress(progress);
      if (progress >= 100) {
        clearInterval(interval);
      }
    }, 1000);
  }
  return data;
}


/*
// 获取币制信息
export const getVoucherLogList = async (): Promise<VoucherLogItemProps[]> => {
  const response = await request({
    method: "GET",
    url: "/voucher_log"
  })
  const responseData = response?.data as ApiRes<VoucherLogItemProps[]>;
  return responseData.data || [];
}

export const saveVoucherLog = (data:VoucherLogItemProps,onUploadProgress: (progress: number) => void) => {
  return requestWithProgress({
    method: 'POST',
    url: "/voucher_log/save",
    data:data,
    onUploadProgress: (progress) => {
        onUploadProgress(progress);
    }
  })
}
*/
