
import { TableColumnsType, Tag, Popconfirm } from 'antd';
import { PaymentApplicationItemProps } from "@/types/payment_application/payment_application";
import i18n from '@/i18n';
import LocaleHelper from '@/utils/locale';



export const getColumns = (handleEdit: (record: PaymentApplicationItemProps) => void, handleDelete: (record: PaymentApplicationItemProps) => void): TableColumnsType<PaymentApplicationItemProps> => [

    {
        title: i18n.t(LocaleHelper.getPaymentApplicationPaymentNotificationNumber()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'PaymentNotificationNumber',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationSettlementObject()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'SettlementObject',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationSettlementAgent()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'SettlementAgent',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationEntrustingUnit()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'EntrustingUnit',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationModificationTime()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'ModificationTime',
        sorter: true,
        align: 'center',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationModifier()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'Modifier',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationInvoiceTitle()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'InvoiceTitle',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationBusinessNumber()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'BusinessNumber',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationApplicationDate()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'ApplicationDate',
        sorter: true,
        align: 'center',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationApplicant()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'Applicant',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationApplicantDepartment()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'ApplicantDepartment',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationPaymentDeadline()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'PaymentDeadline',
        sorter: true,
        align: 'center',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationPaymentMethod()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'PaymentMethod',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationInvoiceNumber()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'InvoiceNumber',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationCurrencyCode()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'CurrencyCode',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationAmount()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'Amount',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationReconciliationAmountByCurrency()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '160px' } }),
        dataIndex: 'ReconciliationAmountByCurrency',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationApprovalStatus()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'ApprovalStatus',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationReconciliationStatus()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'ReconciliationStatus',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationRemarks()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'Remarks',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationProcessNumber()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'ProcessNumber',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationTotalByCurrency()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '160px' } }),
        dataIndex: 'TotalByCurrency',
        sorter: true,
        align: 'right',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationVoucherNumber()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'VoucherNumber',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationVoucherCreationDate()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'VoucherCreationDate',
        sorter: true,
        align: 'center',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationCarrier()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'Carrier',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationShippingLocation()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'ShippingLocation',
        sorter: true,
        align: 'left',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationActualTrailerPickupTime()),
        width: 160,
        onHeaderCell: () => ({ style: { width: '160px' } }),
        dataIndex: 'ActualTrailerPickupTime',
        sorter: true,
        align: 'center',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationDocumentDate()),
        width: 100,
        onHeaderCell: () => ({ style: { width: '100px' } }),
        dataIndex: 'DocumentDate',
        sorter: true,
        align: 'center',
    },
    {
        title: i18n.t(LocaleHelper.getPaymentApplicationFinancialPayableStatus()),
        width: 120,
        onHeaderCell: () => ({ style: { width: '120px' } }),
        dataIndex: 'FinancialPayableStatus',
        sorter: true,
        align: 'left',
    },
    {
        title: '操作',
        key: 'operation',
        fixed: 'right',
        width: 60,
        render: (_, record) => (
        <>
            <a onClick={()=>handleEdit(record)}>编辑</a>
            <Popconfirm title="确定要删除吗?" cancelText="取消" okText="确定" onConfirm={() => handleDelete(record)}>
                <a>删除</a>
            </Popconfirm>
        </>
        ),
    },
]; 
