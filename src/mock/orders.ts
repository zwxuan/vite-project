import Mock from "mockjs";
import { OrdersItemProps } from "@/types/settlement_center/business_manage/orders";
import { IncomingMessage, ServerResponse } from 'http';

// 修正icon的类型问题，因为JSX元素不能作为JSON对象的一部分，这里已经改为字符串
const ordersItems: OrdersItemProps[] = [
  {
    BusinessId: 'SHSE20050001',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345577',
    Carrier: '[GH00001]中远集装箱运输有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P000001',
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '已生效',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number", 1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '无应收',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '门点装箱,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '印巴',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus: '部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020011',
    CustomerLevel: 'C级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-东南亚航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-东南亚航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '已录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'MVP',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  },
  {
    BusinessId: 'SHSE20020017',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345567',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P' + Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number", 1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus: '部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020017',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '指定货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  },
  {
    BusinessId: 'SHSE20020018',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH000031]高丽海运株式会社',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00005]上海大洋行有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '合约失效',
    DeparturePort: '[CNSHA]SHANGHAI',
    DestinationPort: '[USLAX]LOS ANGELES,CA',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00005]美国总统班轮公司',
    ProjectId: 'P' + Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number", 1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
   PayableVerificationStatus: '未核销',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 1,
    ContainerTypeQuantity: '1*20HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '已开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
   CargoType: '托盘',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020017',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  },
  {
    BusinessId: 'SHSE20020020',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'FOS',
    Voyage: 'V.3006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '未签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number", 1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
   PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '危险品',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020020',
    CustomerLevel: 'A级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'AAA',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),

  },
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  },
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
  ,
  {
    BusinessId: 'SHSE20020019',
    ServiceType:`${Object.values(Mock.mock({"object|1": {"海陆关": "海陆关","空陆关": "空陆关","关陆": "关陆","海铁": "海铁"}}).object)[0]}`,
    MainOrderNumber: 'COSU12345568',
    Carrier: '[GH00002]上海市锦江航运有限公司',
    ShipName: 'COSCO FOS',
    Voyage: 'V.2006E',
    Customer: '[CUS00001]上海沃行信息技术有限公司',
    BusinessDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ContractStatus: '已签约',
    DeparturePort: '[CNXGG]XINGANG',
    DestinationPort: '[CAEDM]EDMONTON',
    DepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerService: Mock.mock('@cname()'),
    AirWaybillChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    AirBookingChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    BookingAgent: '[DL00001]天津航星国际货运代理有限公司',
    ProjectId: 'P'+ Mock.mock('@string("number", 5, 5)'),
    Operation: Mock.mock('@cname()'),
    Sales: Mock.mock('@cname()'),
    SalesDepartment: '[0101-000001-000001]集团公司-海运事业部-北美销售部',
    OverseasService: Mock.mock('@name()'),
    Status: '正操作',
    BusinessType: '海运出口',
    ActualChargedWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedPieces: Mock.mock('@string("number",1, 3)'),
    ContainerNumber: 'C001,C002,C003',
    EntrustedGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    EntrustedVolume: Mock.mock('@float(60, 100, 0, 2)'),
    ActualPieces: Mock.mock('@string("number", 1, 3)'),
    ActualGrossWeight: Mock.mock('@float(60, 100, 0, 2)'),
    ActualVolume: Mock.mock('@float(60, 100, 0, 2)'),
    PayableVerificationStatus: '无应付',
    ReceivableVerificationStatus: '未核销',
    PurchasePrice: Mock.mock('@float(60, 100, 0, 2)'),
    SellingPrice: Mock.mock('@float(60, 100, 0, 2)'),
    ArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    DesignatedFreightAgent: '[DL00002]Walltech',
    FinalDestination: '[CATOR]TORONTO',
    LocalService: '内装箱,门点装箱,报关,订舱',
    CreationDate: Mock.mock('@now()'),
    CustomBusinessType: '',
    BusinessReferenceNumber: Mock.mock('@string("number", 5, 5)'),
    DeliveryDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ShippingCompanyContractNumber: 'S' + Mock.mock('@string("number", 5, 5)'),
    InternalContractNumber: 'NB' + Mock.mock('@string("number", 5, 5)'),
    QuotationNumber: 'BJ' + Mock.mock('@string("number", 5, 5)'),
    ShippingRoute: '美西',
    Teu: 3,
    ContainerTypeQuantity: '1*40HQ',
    CollectionSales: Mock.mock('@cname()'),
    OperationDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualDepartureDateAtd: Mock.mock('@now(day, yyyy-MM-dd)'),
    ActualArrivalDateAta: Mock.mock('@now(day, yyyy-MM-dd)'),
    Consignee: 'EIN27-2715229',
    Shipper: 'USCI91310000329611325T',
    ReceivableInvoiceStatus: '未开票',
    PayableInvoiceStatus:'部分开票',
    CustomerContact: Mock.mock('@cname()'),
    SopStatus: '接单(未接单),订舱(已订舱 2020-02-19 20:18:09),货物进仓(未入库),安排拖车(未派车),货物装箱(未装箱),报关单证(未收到),离港(未离港),提单(未制单),到港(未到港),已完结(),卸区(未确定),',
    SopTemplateName: '默认模板',
    CargoType: '普货',
    ActualPickupTime: Mock.mock('@now()'),
    ActualReturnEmptyTime: Mock.mock('@now()'),
    SubOrderNumber: 'SHSE20020019',
    CustomerLevel: 'D级客户',
    ActualDeliveryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CustomerServiceDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    DocumentationDepartment: '[0101-000001-000001]集团公司-海运事业部-北美航线部',
    ReceivableFeesEntered: '未录入',
    PayableFeesEntered: '未录入',
    BranchDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BranchArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeDepartureDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    BargeArrivalDate: Mock.mock('@now(day, yyyy-MM-dd)'),
    Mark: 'WIPRO',
    EntryTime: Mock.mock('@now(day, yyyy-MM-dd)'),
    CollectionType: '自揽货',
    Profit: Mock.mock('@float(60, 100, 0, 2)'),
    Income: Mock.mock('@float(60, 100, 0, 2)'),
    Expenditure: Mock.mock('@float(60, 100, 0, 2)'),
  }
];

export default [
  // 订单管理表，存储与业务相关的订单信息台账
  {
    url: "/api/orders",
    method: "GET",
    response: () => {
      return {
        code: 200,
        success: true,
        message: "请求成功。",
        data: ordersItems,
      };
    },
  },
  {
    url: "/api/orders/save",
    method: "POST",
    response: ({ body }: { body: OrdersItemProps }) => {
      return {
        code: 200,
        success: true,
        message: "开始处理",
        data: body
      };
    }
  },
  {
    url: "/api/orders/save/progress",
    method: "GET",
    rawResponse: async (req: IncomingMessage, res: ServerResponse) => {
      res.setHeader('Content-Type', 'text/event-stream');
      res.setHeader('Cache-Control', 'no-cache');
      res.setHeader('Connection', 'keep-alive');
      res.setHeader('X-Accel-Buffering', 'no');

      let progress = 0;

      const sendProgress = () => {
        const data = {
          code: 200,
          success: true,
          message: progress >= 100 ? "保存成功" : "处理中...",
          data: {
            progress: progress,
            status: progress >= 100 ? 'completed' : 'processing',
            result: progress >= 100 ? null : null
          }
        };

        res.write(`data: ${JSON.stringify(data)}\n\n`);
        console.log('Sending progress:', progress);

        if (progress >= 100) {
          res.end();
          return;
        }

        progress += 10;
        setTimeout(sendProgress, 1000);
      };

      sendProgress();
    }
  }
];