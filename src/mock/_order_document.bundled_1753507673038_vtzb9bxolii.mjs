// src/mock/order_document.ts
import Mock from "mockjs";
var orderDocumentItems = [
  {
    FileName: `${Object.values(Mock.mock({ "object|1": { "V3-\u6D77\u8FD0\u6258\u4E66_AFS2007004": "V3-\u6D77\u8FD0\u6258\u4E66_AFS2007004", "\u672A\u6536\u5BF9\u8D26\u8868\uFF08\u6309\u5DE5\u4F5C\u53F7\uFF09": "\u672A\u6536\u5BF9\u8D26\u8868\uFF08\u6309\u5DE5\u4F5C\u53F7\uFF09", "\u5BF9\u5355\u786E\u8BA4\u6A21\u5757_AFS2007004": "\u5BF9\u5355\u786E\u8BA4\u6A21\u5757_AFS2007004" } }).object)[0]}`,
    Version: "1.0",
    FileType: `${Object.values(Mock.mock({ "object|1": { "jpg": "jpg", "xls": "xls", "pdf": "pdf", "doc": "doc" } }).object)[0]}`,
    FileFormat: `${Object.values(Mock.mock({ "object|1": { "application/octet-stream": "application/octet-stream", "application/pdf": "application/pdf" } }).object)[0]}`,
    FileSize: Mock.mock('@string("number", 1, 3)'),
    CreatedBy: Mock.mock("@cname()"),
    CreatedDate: Mock.mock("@datetime()"),
    FileSource: `${Object.values(Mock.mock({ "object|1": { "\u4ED3\u50A8\u7CFB\u7EDF": "\u4ED3\u50A8\u7CFB\u7EDF", "\u62A5\u5173\u7CFB\u7EDF": "\u62A5\u5173\u7CFB\u7EDF", "\u6D77\u8FD0\u7CFB\u7EDF": "\u6D77\u8FD0\u7CFB\u7EDF" } }).object)[0]}`,
    AttributeDetails: "",
    SyncStatus: "\u672A\u540C\u6B65",
    ExternalFileType: "",
    LastSyncTime: Mock.mock("@datetime()"),
    Operation: Mock.mock("@cname()")
  },
  {
    FileName: `${Object.values(Mock.mock({ "object|1": { "V3-\u6D77\u8FD0\u6258\u4E66_AFS2007004": "V3-\u6D77\u8FD0\u6258\u4E66_AFS2007004", "\u672A\u6536\u5BF9\u8D26\u8868\uFF08\u6309\u5DE5\u4F5C\u53F7\uFF09": "\u672A\u6536\u5BF9\u8D26\u8868\uFF08\u6309\u5DE5\u4F5C\u53F7\uFF09", "\u5BF9\u5355\u786E\u8BA4\u6A21\u5757_AFS2007004": "\u5BF9\u5355\u786E\u8BA4\u6A21\u5757_AFS2007004" } }).object)[0]}`,
    Version: "1.0",
    FileType: `${Object.values(Mock.mock({ "object|1": { "jpg": "jpg", "xls": "xls", "pdf": "pdf", "doc": "doc" } }).object)[0]}`,
    FileFormat: `${Object.values(Mock.mock({ "object|1": { "application/octet-stream": "application/octet-stream", "application/pdf": "application/pdf" } }).object)[0]}`,
    FileSize: Mock.mock('@string("number", 1, 3)'),
    CreatedBy: Mock.mock("@cname()"),
    CreatedDate: Mock.mock("@datetime()"),
    FileSource: `${Object.values(Mock.mock({ "object|1": { "\u4ED3\u50A8\u7CFB\u7EDF": "\u4ED3\u50A8\u7CFB\u7EDF", "\u62A5\u5173\u7CFB\u7EDF": "\u62A5\u5173\u7CFB\u7EDF", "\u6D77\u8FD0\u7CFB\u7EDF": "\u6D77\u8FD0\u7CFB\u7EDF" } }).object)[0]}`,
    AttributeDetails: "",
    SyncStatus: "\u672A\u540C\u6B65",
    ExternalFileType: "",
    LastSyncTime: Mock.mock("@datetime()"),
    Operation: Mock.mock("@cname()")
  },
  {
    FileName: `${Object.values(Mock.mock({ "object|1": { "V3-\u6D77\u8FD0\u6258\u4E66_AFS2007004": "V3-\u6D77\u8FD0\u6258\u4E66_AFS2007004", "\u672A\u6536\u5BF9\u8D26\u8868\uFF08\u6309\u5DE5\u4F5C\u53F7\uFF09": "\u672A\u6536\u5BF9\u8D26\u8868\uFF08\u6309\u5DE5\u4F5C\u53F7\uFF09", "\u5BF9\u5355\u786E\u8BA4\u6A21\u5757_AFS2007004": "\u5BF9\u5355\u786E\u8BA4\u6A21\u5757_AFS2007004" } }).object)[0]}`,
    Version: "1.0",
    FileType: `${Object.values(Mock.mock({ "object|1": { "jpg": "jpg", "xls": "xls", "pdf": "pdf", "doc": "doc" } }).object)[0]}`,
    FileFormat: `${Object.values(Mock.mock({ "object|1": { "application/octet-stream": "application/octet-stream", "application/pdf": "application/pdf" } }).object)[0]}`,
    FileSize: Mock.mock('@string("number", 1, 3)'),
    CreatedBy: Mock.mock("@cname()"),
    CreatedDate: Mock.mock("@datetime()"),
    FileSource: `${Object.values(Mock.mock({ "object|1": { "\u4ED3\u50A8\u7CFB\u7EDF": "\u4ED3\u50A8\u7CFB\u7EDF", "\u62A5\u5173\u7CFB\u7EDF": "\u62A5\u5173\u7CFB\u7EDF", "\u6D77\u8FD0\u7CFB\u7EDF": "\u6D77\u8FD0\u7CFB\u7EDF" } }).object)[0]}`,
    AttributeDetails: "",
    SyncStatus: "\u672A\u540C\u6B65",
    ExternalFileType: "",
    LastSyncTime: Mock.mock("@datetime()"),
    Operation: Mock.mock("@cname()")
  }
];
var order_document_default = [
  // 订单文档台账
  {
    url: "/api/order_document",
    method: "GET",
    response: () => {
      return {
        code: 200,
        success: true,
        message: "\u8BF7\u6C42\u6210\u529F\u3002",
        data: orderDocumentItems
      };
    }
  },
  {
    url: "/api/order_document/save",
    method: "POST",
    response: ({ body }) => {
      return {
        code: 200,
        success: true,
        message: "\u5F00\u59CB\u5904\u7406",
        data: body
      };
    }
  },
  {
    url: "/api/order_document/save/progress",
    method: "GET",
    rawResponse: async (req, res) => {
      res.setHeader("Content-Type", "text/event-stream");
      res.setHeader("Cache-Control", "no-cache");
      res.setHeader("Connection", "keep-alive");
      res.setHeader("X-Accel-Buffering", "no");
      let progress = 0;
      const sendProgress = () => {
        const data = {
          code: 200,
          success: true,
          message: progress >= 100 ? "\u4FDD\u5B58\u6210\u529F" : "\u5904\u7406\u4E2D...",
          data: {
            progress,
            status: progress >= 100 ? "completed" : "processing",
            result: progress >= 100 ? null : null
          }
        };
        res.write(`data: ${JSON.stringify(data)}

`);
        console.log("Sending progress:", progress);
        if (progress >= 100) {
          res.end();
          return;
        }
        progress += 10;
        setTimeout(sendProgress, 1e3);
      };
      sendProgress();
    }
  }
];
export {
  order_document_default as default
};
//# sourceMappingURL=data:application/json;base64,
