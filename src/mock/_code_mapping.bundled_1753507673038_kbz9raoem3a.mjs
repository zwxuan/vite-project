// src/mock/code_mapping.ts
import Mock from "mockjs";
var codeMappingItems = [
  {
    MappingCode: Mock.mock("@id"),
    BookingName: "\u7BA1\u7406\u8D26\u5957",
    BusinessCode: "",
    BusinessName: "\u5408\u4F5C\u4F19\u4F34\u540D\u79F01",
    FinanceCode: "0001",
    Remark: "\u5408\u4F5C\u4F19\u4F34\u5BF9\u5E94\u7684\u8D22\u52A1\u7F16\u7801"
  },
  {
    MappingCode: Mock.mock("@id"),
    BookingName: "\u7BA1\u7406\u8D26\u5957",
    BusinessCode: "",
    BusinessName: "\u5408\u4F5C\u4F19\u4F34\u540D\u79F02",
    FinanceCode: "0002",
    Remark: "\u5408\u4F5C\u4F19\u4F34\u5BF9\u5E94\u7684\u8D22\u52A1\u7F16\u7801"
  }
];
var codeMappingEntrys = [
  {
    MappingCode: Mock.mock("@id"),
    BookingName: "\u7BA1\u7406\u8D26\u5957",
    BusinessCode: "",
    BusinessName: "\u5E94\u6536\u8D26\u6B3E",
    FinanceCode: "1131",
    Remark: "\u5206\u5F55\u5BF9\u5E94\u7684\u8D22\u52A1\u7F16\u7801"
  },
  {
    MappingCode: Mock.mock("@id"),
    BookingName: "\u7BA1\u7406\u8D26\u5957",
    BusinessCode: "",
    BusinessName: "\u94F6\u884C\u5B58\u6B3E",
    FinanceCode: "1132",
    Remark: "\u5206\u5F55\u5BF9\u5E94\u7684\u8D22\u52A1\u7F16\u7801"
  },
  {
    MappingCode: Mock.mock("@id"),
    BookingName: "\u7BA1\u7406\u8D26\u5957",
    BusinessCode: "",
    BusinessName: "\u8425\u4E1A\u6536\u5165",
    FinanceCode: "5001",
    Remark: "\u5206\u5F55\u5BF9\u5E94\u7684\u8D22\u52A1\u7F16\u7801"
  }
];
var code_mapping_default = [
  // 编码映射台账
  {
    url: "/api/code_mapping",
    method: "GET",
    response: () => {
      return {
        code: 200,
        success: true,
        message: "\u8BF7\u6C42\u6210\u529F\u3002",
        data: codeMappingItems
      };
    }
  },
  {
    url: "/api/code_mapping/entry",
    method: "GET",
    response: () => {
      return {
        code: 200,
        success: true,
        message: "\u8BF7\u6C42\u6210\u529F\u3002",
        data: codeMappingEntrys
      };
    }
  },
  {
    url: "/api/code_mapping/save",
    method: "POST",
    response: ({ body }) => {
      return {
        code: 200,
        success: true,
        message: "\u5F00\u59CB\u5904\u7406",
        data: body
      };
    }
  },
  {
    url: "/api/code_mapping/save/progress",
    method: "GET",
    rawResponse: async (req, res) => {
      res.setHeader("Content-Type", "text/event-stream");
      res.setHeader("Cache-Control", "no-cache");
      res.setHeader("Connection", "keep-alive");
      res.setHeader("X-Accel-Buffering", "no");
      let progress = 0;
      const sendProgress = () => {
        const data = {
          code: 200,
          success: true,
          message: progress >= 100 ? "\u4FDD\u5B58\u6210\u529F" : "\u5904\u7406\u4E2D...",
          data: {
            progress,
            status: progress >= 100 ? "completed" : "processing",
            result: progress >= 100 ? null : null
          }
        };
        res.write(`data: ${JSON.stringify(data)}

`);
        console.log("Sending progress:", progress);
        if (progress >= 100) {
          res.end();
          return;
        }
        progress += 10;
        setTimeout(sendProgress, 1e3);
      };
      sendProgress();
    }
  }
];
export {
  code_mapping_default as default
};
//# sourceMappingURL=data:application/json;base64,
