
import request, { ApiRes, requestWithProgress } from '../../request'
import { FeeNameItemProps, OrderFeeItemProps } from "@/types/settlement_center/business_manage/order_fee";
import Mock from "mockjs";

const orderFeeItems:OrderFeeItemProps[] = [
  {
      SettlementCompany:`${Object.values(Mock.mock({"object|1": {"青岛子公司": "青岛子公司","上海子公司": "上海子公司","深圳子公司": "深圳子公司","西安子公司": "西安子公司"}}).object)[0]}`,
      FeeName:`${Object.values(Mock.mock({"object|1": {"海运费": "海运费","空运费": "空运费","报关费": "报关费","仓储费": "仓储费"}}).object)[0]}`,
      SettlementType:`${Object.values(Mock.mock({"object|1": {"票结": "票结","月结": "月结","半月结": "半月结","周结": "周结"}}).object)[0]}`,
      SettlementObject:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      InvoiceTitle:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      DomesticForeign:`${Object.values(Mock.mock({"object|1": {"国内": "国内","国外": "国外"}}).object)[0]}`,
      NeedInvoice:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Currency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      ExchangeRate:Mock.mock('@float(1, 10, 0, 2)'),
      Unit:`${Object.values(Mock.mock({"object|1": {"箱数": "箱数","普通价": "普通价"}}).object)[0]}`,
      Quantity:Mock.mock('@float(60, 100, 0, 2)'),
      UnitPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxIncludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxExcludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxRate:Mock.mock('@float(60, 100, 0, 2)'),
      TaxAmount:Mock.mock('@float(60, 100, 0, 2)'),
      RmbEquivalent:Mock.mock('@float(60, 100, 0, 2)'),
      LocalCurrency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      Reviewer:Mock.mock('@cname()'),
      Remarks:Mock.mock('@ctitle(5)'),
      ContactPerson:Mock.mock('@cname()'),
      AssociatedBillNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      AssociatedContainerNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      PrepaidCollect:`${Object.values(Mock.mock({"object|1": {"预付": "预付","到付": "到付"}}).object)[0]}`,
      Status:`${Object.values(Mock.mock({"object|1": {"未提交": "未提交","已提交": "已提交","未审核":"未审核","已审核":"已审核","已归档":"已归档"}}).object)[0]}`,
      IsConfirmed:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      AgentSplitBillNumber:Mock.mock({'regexp': /AC\d{5,10}/}).regexp,
      BillNumber:Mock.mock({'regexp': /BN\d{5,10}/}).regexp,
      AccrualDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      InvoiceNumber:Mock.mock({'regexp': /RI\d{5,10}/}).regexp,
      InvoiceDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      CounterpartBillNumber:Mock.mock({'regexp': /CP\d{5,10}/}).regexp,
      PaymentApplicationNumber:Mock.mock({'regexp': /PR\d{5,10}/}).regexp,
      WriteOffAmount:Mock.mock('@float(60, 100, 0, 2)'),
      UnadjustedAmount:Mock.mock('@float(60, 100, 0, 2)'),
      WriteOffDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      PaymentDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      FinancialDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      BusinessNumber:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      Creator:Mock.mock('@cname()'),
      CreateTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      Modifier:Mock.mock('@cname()'),
      ModifyTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      WriteOffSerialNumber:Mock.mock({'regexp': /HX\d{5,10}/}).regexp,
      IsVoucherGenerated:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Allocation:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      LockStatus:`${Object.values(Mock.mock({"object|1": {"未锁定": "未锁定","已锁定": "已锁定"}}).object)[0]}`,
      LockTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      DataSource:`${Object.values(Mock.mock({"object|1": {"操作录入": "操作录入","外部导入": "外部导入","自动生成":"自动生成","Excle导入":"Excel导入"}}).object)[0]}`,
      IsAdjustedFee:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      FeeModifier:Mock.mock('@cname()'),
      SettlementAgent:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      FeeSyncStatus:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      ModifyFeeApplicationProgress:Mock.mock({"string|1-10": "★"}).string,
      AllocationRelatedBusiness:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      AllocationType:`${Object.values(Mock.mock({"object|1": {"平均分配": "平均分配","按体积": "按体积","按重量": "按重量"}}).object)[0]}`,
      RelatedFeeId:Mock.mock("@id"),
      FeeId:Mock.mock("@id"),
      CreditDebit:`${Object.values(Mock.mock({"object|1": {"收": "收","支": "支"}}).object)[0]}`,
  },  
  {
      SettlementCompany:`${Object.values(Mock.mock({"object|1": {"青岛子公司": "青岛子公司","上海子公司": "上海子公司","深圳子公司": "深圳子公司","西安子公司": "西安子公司"}}).object)[0]}`,
      FeeName:`${Object.values(Mock.mock({"object|1": {"海运费": "海运费","空运费": "空运费","报关费": "报关费","仓储费": "仓储费"}}).object)[0]}`,
      SettlementType:`${Object.values(Mock.mock({"object|1": {"票结": "票结","月结": "月结","半月结": "半月结","周结": "周结"}}).object)[0]}`,
      SettlementObject:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      InvoiceTitle:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      DomesticForeign:`${Object.values(Mock.mock({"object|1": {"国内": "国内","国外": "国外"}}).object)[0]}`,
      NeedInvoice:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Currency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      ExchangeRate:Mock.mock('@float(1, 10, 0, 2)'),
      Unit:`${Object.values(Mock.mock({"object|1": {"箱数": "箱数","普通价": "普通价"}}).object)[0]}`,
      Quantity:Mock.mock('@float(60, 100, 0, 2)'),
      UnitPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxIncludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxExcludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxRate:Mock.mock('@float(60, 100, 0, 2)'),
      TaxAmount:Mock.mock('@float(60, 100, 0, 2)'),
      RmbEquivalent:Mock.mock('@float(60, 100, 0, 2)'),
      LocalCurrency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      Reviewer:Mock.mock('@cname()'),
      Remarks:Mock.mock('@ctitle(5)'),
      ContactPerson:Mock.mock('@cname()'),
      AssociatedBillNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      AssociatedContainerNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      PrepaidCollect:`${Object.values(Mock.mock({"object|1": {"预付": "预付","到付": "到付"}}).object)[0]}`,
      Status:`${Object.values(Mock.mock({"object|1": {"未提交": "未提交","已提交": "已提交","未审核":"未审核","已审核":"已审核","已归档":"已归档"}}).object)[0]}`,
      IsConfirmed:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      AgentSplitBillNumber:Mock.mock({'regexp': /AC\d{5,10}/}).regexp,
      BillNumber:Mock.mock({'regexp': /BN\d{5,10}/}).regexp,
      AccrualDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      InvoiceNumber:Mock.mock({'regexp': /RI\d{5,10}/}).regexp,
      InvoiceDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      CounterpartBillNumber:Mock.mock({'regexp': /CP\d{5,10}/}).regexp,
      PaymentApplicationNumber:Mock.mock({'regexp': /PR\d{5,10}/}).regexp,
      WriteOffAmount:Mock.mock('@float(60, 100, 0, 2)'),
      UnadjustedAmount:Mock.mock('@float(60, 100, 0, 2)'),
      WriteOffDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      PaymentDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      FinancialDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      BusinessNumber:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      Creator:Mock.mock('@cname()'),
      CreateTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      Modifier:Mock.mock('@cname()'),
      ModifyTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      WriteOffSerialNumber:Mock.mock({'regexp': /HX\d{5,10}/}).regexp,
      IsVoucherGenerated:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Allocation:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      LockStatus:`${Object.values(Mock.mock({"object|1": {"未锁定": "未锁定","已锁定": "已锁定"}}).object)[0]}`,
      LockTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      DataSource:`${Object.values(Mock.mock({"object|1": {"操作录入": "操作录入","外部导入": "外部导入","自动生成":"自动生成","Excle导入":"Excel导入"}}).object)[0]}`,
      IsAdjustedFee:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      FeeModifier:Mock.mock('@cname()'),
      SettlementAgent:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      FeeSyncStatus:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      ModifyFeeApplicationProgress:Mock.mock({"string|1-10": "★"}).string,
      AllocationRelatedBusiness:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      AllocationType:`${Object.values(Mock.mock({"object|1": {"平均分配": "平均分配","按体积": "按体积","按重量": "按重量"}}).object)[0]}`,
      RelatedFeeId:Mock.mock("@id"),
      FeeId:Mock.mock("@id"),
      CreditDebit:`${Object.values(Mock.mock({"object|1": {"收": "收","支": "支"}}).object)[0]}`,
  },  
  {
      SettlementCompany:`${Object.values(Mock.mock({"object|1": {"青岛子公司": "青岛子公司","上海子公司": "上海子公司","深圳子公司": "深圳子公司","西安子公司": "西安子公司"}}).object)[0]}`,
      FeeName:`${Object.values(Mock.mock({"object|1": {"海运费": "海运费","空运费": "空运费","报关费": "报关费","仓储费": "仓储费"}}).object)[0]}`,
      SettlementType:`${Object.values(Mock.mock({"object|1": {"票结": "票结","月结": "月结","半月结": "半月结","周结": "周结"}}).object)[0]}`,
      SettlementObject:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      InvoiceTitle:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      DomesticForeign:`${Object.values(Mock.mock({"object|1": {"国内": "国内","国外": "国外"}}).object)[0]}`,
      NeedInvoice:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Currency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      ExchangeRate:Mock.mock('@float(1, 10, 0, 2)'),
      Unit:`${Object.values(Mock.mock({"object|1": {"箱数": "箱数","普通价": "普通价"}}).object)[0]}`,
      Quantity:Mock.mock('@float(60, 100, 0, 2)'),
      UnitPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxIncludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxExcludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxRate:Mock.mock('@float(60, 100, 0, 2)'),
      TaxAmount:Mock.mock('@float(60, 100, 0, 2)'),
      RmbEquivalent:Mock.mock('@float(60, 100, 0, 2)'),
      LocalCurrency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      Reviewer:Mock.mock('@cname()'),
      Remarks:Mock.mock('@ctitle(5)'),
      ContactPerson:Mock.mock('@cname()'),
      AssociatedBillNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      AssociatedContainerNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      PrepaidCollect:`${Object.values(Mock.mock({"object|1": {"预付": "预付","到付": "到付"}}).object)[0]}`,
      Status:`${Object.values(Mock.mock({"object|1": {"未提交": "未提交","已提交": "已提交","未审核":"未审核","已审核":"已审核","已归档":"已归档"}}).object)[0]}`,
      IsConfirmed:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      AgentSplitBillNumber:Mock.mock({'regexp': /AC\d{5,10}/}).regexp,
      BillNumber:Mock.mock({'regexp': /BN\d{5,10}/}).regexp,
      AccrualDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      InvoiceNumber:Mock.mock({'regexp': /RI\d{5,10}/}).regexp,
      InvoiceDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      CounterpartBillNumber:Mock.mock({'regexp': /CP\d{5,10}/}).regexp,
      PaymentApplicationNumber:Mock.mock({'regexp': /PR\d{5,10}/}).regexp,
      WriteOffAmount:Mock.mock('@float(60, 100, 0, 2)'),
      UnadjustedAmount:Mock.mock('@float(60, 100, 0, 2)'),
      WriteOffDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      PaymentDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      FinancialDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      BusinessNumber:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      Creator:Mock.mock('@cname()'),
      CreateTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      Modifier:Mock.mock('@cname()'),
      ModifyTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      WriteOffSerialNumber:Mock.mock({'regexp': /HX\d{5,10}/}).regexp,
      IsVoucherGenerated:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Allocation:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      LockStatus:`${Object.values(Mock.mock({"object|1": {"未锁定": "未锁定","已锁定": "已锁定"}}).object)[0]}`,
      LockTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      DataSource:`${Object.values(Mock.mock({"object|1": {"操作录入": "操作录入","外部导入": "外部导入","自动生成":"自动生成","Excle导入":"Excel导入"}}).object)[0]}`,
      IsAdjustedFee:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      FeeModifier:Mock.mock('@cname()'),
      SettlementAgent:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      FeeSyncStatus:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      ModifyFeeApplicationProgress:Mock.mock({"string|1-10": "★"}).string,
      AllocationRelatedBusiness:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      AllocationType:`${Object.values(Mock.mock({"object|1": {"平均分配": "平均分配","按体积": "按体积","按重量": "按重量"}}).object)[0]}`,
      RelatedFeeId:Mock.mock("@id"),
      FeeId:Mock.mock("@id"),
      CreditDebit:`${Object.values(Mock.mock({"object|1": {"收": "收","支": "支"}}).object)[0]}`,
  },  
  {
      SettlementCompany:`${Object.values(Mock.mock({"object|1": {"青岛子公司": "青岛子公司","上海子公司": "上海子公司","深圳子公司": "深圳子公司","西安子公司": "西安子公司"}}).object)[0]}`,
      FeeName:`${Object.values(Mock.mock({"object|1": {"海运费": "海运费","空运费": "空运费","报关费": "报关费","仓储费": "仓储费"}}).object)[0]}`,
      SettlementType:`${Object.values(Mock.mock({"object|1": {"票结": "票结","月结": "月结","半月结": "半月结","周结": "周结"}}).object)[0]}`,
      SettlementObject:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      InvoiceTitle:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      DomesticForeign:`${Object.values(Mock.mock({"object|1": {"国内": "国内","国外": "国外"}}).object)[0]}`,
      NeedInvoice:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Currency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      ExchangeRate:Mock.mock('@float(1, 10, 0, 2)'),
      Unit:`${Object.values(Mock.mock({"object|1": {"箱数": "箱数","普通价": "普通价"}}).object)[0]}`,
      Quantity:Mock.mock('@float(60, 100, 0, 2)'),
      UnitPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxIncludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxExcludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxRate:Mock.mock('@float(60, 100, 0, 2)'),
      TaxAmount:Mock.mock('@float(60, 100, 0, 2)'),
      RmbEquivalent:Mock.mock('@float(60, 100, 0, 2)'),
      LocalCurrency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      Reviewer:Mock.mock('@cname()'),
      Remarks:Mock.mock('@ctitle(5)'),
      ContactPerson:Mock.mock('@cname()'),
      AssociatedBillNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      AssociatedContainerNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      PrepaidCollect:`${Object.values(Mock.mock({"object|1": {"预付": "预付","到付": "到付"}}).object)[0]}`,
      Status:`${Object.values(Mock.mock({"object|1": {"未提交": "未提交","已提交": "已提交","未审核":"未审核","已审核":"已审核","已归档":"已归档"}}).object)[0]}`,
      IsConfirmed:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      AgentSplitBillNumber:Mock.mock({'regexp': /AC\d{5,10}/}).regexp,
      BillNumber:Mock.mock({'regexp': /BN\d{5,10}/}).regexp,
      AccrualDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      InvoiceNumber:Mock.mock({'regexp': /RI\d{5,10}/}).regexp,
      InvoiceDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      CounterpartBillNumber:Mock.mock({'regexp': /CP\d{5,10}/}).regexp,
      PaymentApplicationNumber:Mock.mock({'regexp': /PR\d{5,10}/}).regexp,
      WriteOffAmount:Mock.mock('@float(60, 100, 0, 2)'),
      UnadjustedAmount:Mock.mock('@float(60, 100, 0, 2)'),
      WriteOffDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      PaymentDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      FinancialDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      BusinessNumber:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      Creator:Mock.mock('@cname()'),
      CreateTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      Modifier:Mock.mock('@cname()'),
      ModifyTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      WriteOffSerialNumber:Mock.mock({'regexp': /HX\d{5,10}/}).regexp,
      IsVoucherGenerated:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Allocation:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      LockStatus:`${Object.values(Mock.mock({"object|1": {"未锁定": "未锁定","已锁定": "已锁定"}}).object)[0]}`,
      LockTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      DataSource:`${Object.values(Mock.mock({"object|1": {"操作录入": "操作录入","外部导入": "外部导入","自动生成":"自动生成","Excle导入":"Excel导入"}}).object)[0]}`,
      IsAdjustedFee:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      FeeModifier:Mock.mock('@cname()'),
      SettlementAgent:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      FeeSyncStatus:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      ModifyFeeApplicationProgress:Mock.mock({"string|1-10": "★"}).string,
      AllocationRelatedBusiness:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      AllocationType:`${Object.values(Mock.mock({"object|1": {"平均分配": "平均分配","按体积": "按体积","按重量": "按重量"}}).object)[0]}`,
      RelatedFeeId:Mock.mock("@id"),
      FeeId:Mock.mock("@id"),
      CreditDebit:`${Object.values(Mock.mock({"object|1": {"收": "收","支": "支"}}).object)[0]}`,
  },  
  {
      SettlementCompany:`${Object.values(Mock.mock({"object|1": {"青岛子公司": "青岛子公司","上海子公司": "上海子公司","深圳子公司": "深圳子公司","西安子公司": "西安子公司"}}).object)[0]}`,
      FeeName:`${Object.values(Mock.mock({"object|1": {"海运费": "海运费","空运费": "空运费","报关费": "报关费","仓储费": "仓储费"}}).object)[0]}`,
      SettlementType:`${Object.values(Mock.mock({"object|1": {"票结": "票结","月结": "月结","半月结": "半月结","周结": "周结"}}).object)[0]}`,
      SettlementObject:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      InvoiceTitle:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      DomesticForeign:`${Object.values(Mock.mock({"object|1": {"国内": "国内","国外": "国外"}}).object)[0]}`,
      NeedInvoice:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Currency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      ExchangeRate:Mock.mock('@float(1, 10, 0, 2)'),
      Unit:`${Object.values(Mock.mock({"object|1": {"箱数": "箱数","普通价": "普通价"}}).object)[0]}`,
      Quantity:Mock.mock('@float(60, 100, 0, 2)'),
      UnitPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxIncludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxExcludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxRate:Mock.mock('@float(60, 100, 0, 2)'),
      TaxAmount:Mock.mock('@float(60, 100, 0, 2)'),
      RmbEquivalent:Mock.mock('@float(60, 100, 0, 2)'),
      LocalCurrency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      Reviewer:Mock.mock('@cname()'),
      Remarks:Mock.mock('@ctitle(5)'),
      ContactPerson:Mock.mock('@cname()'),
      AssociatedBillNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      AssociatedContainerNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      PrepaidCollect:`${Object.values(Mock.mock({"object|1": {"预付": "预付","到付": "到付"}}).object)[0]}`,
      Status:`${Object.values(Mock.mock({"object|1": {"未提交": "未提交","已提交": "已提交","未审核":"未审核","已审核":"已审核","已归档":"已归档"}}).object)[0]}`,
      IsConfirmed:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      AgentSplitBillNumber:Mock.mock({'regexp': /AC\d{5,10}/}).regexp,
      BillNumber:Mock.mock({'regexp': /BN\d{5,10}/}).regexp,
      AccrualDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      InvoiceNumber:Mock.mock({'regexp': /RI\d{5,10}/}).regexp,
      InvoiceDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      CounterpartBillNumber:Mock.mock({'regexp': /CP\d{5,10}/}).regexp,
      PaymentApplicationNumber:Mock.mock({'regexp': /PR\d{5,10}/}).regexp,
      WriteOffAmount:Mock.mock('@float(60, 100, 0, 2)'),
      UnadjustedAmount:Mock.mock('@float(60, 100, 0, 2)'),
      WriteOffDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      PaymentDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      FinancialDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      BusinessNumber:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      Creator:Mock.mock('@cname()'),
      CreateTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      Modifier:Mock.mock('@cname()'),
      ModifyTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      WriteOffSerialNumber:Mock.mock({'regexp': /HX\d{5,10}/}).regexp,
      IsVoucherGenerated:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Allocation:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      LockStatus:`${Object.values(Mock.mock({"object|1": {"未锁定": "未锁定","已锁定": "已锁定"}}).object)[0]}`,
      LockTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      DataSource:`${Object.values(Mock.mock({"object|1": {"操作录入": "操作录入","外部导入": "外部导入","自动生成":"自动生成","Excle导入":"Excel导入"}}).object)[0]}`,
      IsAdjustedFee:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      FeeModifier:Mock.mock('@cname()'),
      SettlementAgent:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      FeeSyncStatus:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      ModifyFeeApplicationProgress:Mock.mock({"string|1-10": "★"}).string,
      AllocationRelatedBusiness:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      AllocationType:`${Object.values(Mock.mock({"object|1": {"平均分配": "平均分配","按体积": "按体积","按重量": "按重量"}}).object)[0]}`,
      RelatedFeeId:Mock.mock("@id"),
      FeeId:Mock.mock("@id"),
      CreditDebit:`${Object.values(Mock.mock({"object|1": {"收": "收","支": "支"}}).object)[0]}`,
  },  
  {
      SettlementCompany:`${Object.values(Mock.mock({"object|1": {"青岛子公司": "青岛子公司","上海子公司": "上海子公司","深圳子公司": "深圳子公司","西安子公司": "西安子公司"}}).object)[0]}`,
      FeeName:`${Object.values(Mock.mock({"object|1": {"海运费": "海运费","空运费": "空运费","报关费": "报关费","仓储费": "仓储费"}}).object)[0]}`,
      SettlementType:`${Object.values(Mock.mock({"object|1": {"票结": "票结","月结": "月结","半月结": "半月结","周结": "周结"}}).object)[0]}`,
      SettlementObject:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      InvoiceTitle:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      DomesticForeign:`${Object.values(Mock.mock({"object|1": {"国内": "国内","国外": "国外"}}).object)[0]}`,
      NeedInvoice:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Currency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      ExchangeRate:Mock.mock('@float(1, 10, 0, 2)'),
      Unit:`${Object.values(Mock.mock({"object|1": {"箱数": "箱数","普通价": "普通价"}}).object)[0]}`,
      Quantity:Mock.mock('@float(60, 100, 0, 2)'),
      UnitPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxIncludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxExcludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxRate:Mock.mock('@float(60, 100, 0, 2)'),
      TaxAmount:Mock.mock('@float(60, 100, 0, 2)'),
      RmbEquivalent:Mock.mock('@float(60, 100, 0, 2)'),
      LocalCurrency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      Reviewer:Mock.mock('@cname()'),
      Remarks:Mock.mock('@ctitle(5)'),
      ContactPerson:Mock.mock('@cname()'),
      AssociatedBillNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      AssociatedContainerNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      PrepaidCollect:`${Object.values(Mock.mock({"object|1": {"预付": "预付","到付": "到付"}}).object)[0]}`,
      Status:`${Object.values(Mock.mock({"object|1": {"未提交": "未提交","已提交": "已提交","未审核":"未审核","已审核":"已审核","已归档":"已归档"}}).object)[0]}`,
      IsConfirmed:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      AgentSplitBillNumber:Mock.mock({'regexp': /AC\d{5,10}/}).regexp,
      BillNumber:Mock.mock({'regexp': /BN\d{5,10}/}).regexp,
      AccrualDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      InvoiceNumber:Mock.mock({'regexp': /RI\d{5,10}/}).regexp,
      InvoiceDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      CounterpartBillNumber:Mock.mock({'regexp': /CP\d{5,10}/}).regexp,
      PaymentApplicationNumber:Mock.mock({'regexp': /PR\d{5,10}/}).regexp,
      WriteOffAmount:Mock.mock('@float(60, 100, 0, 2)'),
      UnadjustedAmount:Mock.mock('@float(60, 100, 0, 2)'),
      WriteOffDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      PaymentDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      FinancialDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      BusinessNumber:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      Creator:Mock.mock('@cname()'),
      CreateTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      Modifier:Mock.mock('@cname()'),
      ModifyTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      WriteOffSerialNumber:Mock.mock({'regexp': /HX\d{5,10}/}).regexp,
      IsVoucherGenerated:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Allocation:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      LockStatus:`${Object.values(Mock.mock({"object|1": {"未锁定": "未锁定","已锁定": "已锁定"}}).object)[0]}`,
      LockTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      DataSource:`${Object.values(Mock.mock({"object|1": {"操作录入": "操作录入","外部导入": "外部导入","自动生成":"自动生成","Excle导入":"Excel导入"}}).object)[0]}`,
      IsAdjustedFee:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      FeeModifier:Mock.mock('@cname()'),
      SettlementAgent:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      FeeSyncStatus:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      ModifyFeeApplicationProgress:Mock.mock({"string|1-10": "★"}).string,
      AllocationRelatedBusiness:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      AllocationType:`${Object.values(Mock.mock({"object|1": {"平均分配": "平均分配","按体积": "按体积","按重量": "按重量"}}).object)[0]}`,
      RelatedFeeId:Mock.mock("@id"),
      FeeId:Mock.mock("@id"),
      CreditDebit:`${Object.values(Mock.mock({"object|1": {"收": "收","支": "支"}}).object)[0]}`,
  },  
  {
      SettlementCompany:`${Object.values(Mock.mock({"object|1": {"青岛子公司": "青岛子公司","上海子公司": "上海子公司","深圳子公司": "深圳子公司","西安子公司": "西安子公司"}}).object)[0]}`,
      FeeName:`${Object.values(Mock.mock({"object|1": {"海运费": "海运费","空运费": "空运费","报关费": "报关费","仓储费": "仓储费"}}).object)[0]}`,
      SettlementType:`${Object.values(Mock.mock({"object|1": {"票结": "票结","月结": "月结","半月结": "半月结","周结": "周结"}}).object)[0]}`,
      SettlementObject:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      InvoiceTitle:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      DomesticForeign:`${Object.values(Mock.mock({"object|1": {"国内": "国内","国外": "国外"}}).object)[0]}`,
      NeedInvoice:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Currency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      ExchangeRate:Mock.mock('@float(1, 10, 0, 2)'),
      Unit:`${Object.values(Mock.mock({"object|1": {"箱数": "箱数","普通价": "普通价"}}).object)[0]}`,
      Quantity:Mock.mock('@float(60, 100, 0, 2)'),
      UnitPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxIncludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxExcludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxRate:Mock.mock('@float(60, 100, 0, 2)'),
      TaxAmount:Mock.mock('@float(60, 100, 0, 2)'),
      RmbEquivalent:Mock.mock('@float(60, 100, 0, 2)'),
      LocalCurrency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      Reviewer:Mock.mock('@cname()'),
      Remarks:Mock.mock('@ctitle(5)'),
      ContactPerson:Mock.mock('@cname()'),
      AssociatedBillNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      AssociatedContainerNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      PrepaidCollect:`${Object.values(Mock.mock({"object|1": {"预付": "预付","到付": "到付"}}).object)[0]}`,
      Status:`${Object.values(Mock.mock({"object|1": {"未提交": "未提交","已提交": "已提交","未审核":"未审核","已审核":"已审核","已归档":"已归档"}}).object)[0]}`,
      IsConfirmed:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      AgentSplitBillNumber:Mock.mock({'regexp': /AC\d{5,10}/}).regexp,
      BillNumber:Mock.mock({'regexp': /BN\d{5,10}/}).regexp,
      AccrualDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      InvoiceNumber:Mock.mock({'regexp': /RI\d{5,10}/}).regexp,
      InvoiceDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      CounterpartBillNumber:Mock.mock({'regexp': /CP\d{5,10}/}).regexp,
      PaymentApplicationNumber:Mock.mock({'regexp': /PR\d{5,10}/}).regexp,
      WriteOffAmount:Mock.mock('@float(60, 100, 0, 2)'),
      UnadjustedAmount:Mock.mock('@float(60, 100, 0, 2)'),
      WriteOffDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      PaymentDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      FinancialDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      BusinessNumber:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      Creator:Mock.mock('@cname()'),
      CreateTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      Modifier:Mock.mock('@cname()'),
      ModifyTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      WriteOffSerialNumber:Mock.mock({'regexp': /HX\d{5,10}/}).regexp,
      IsVoucherGenerated:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Allocation:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      LockStatus:`${Object.values(Mock.mock({"object|1": {"未锁定": "未锁定","已锁定": "已锁定"}}).object)[0]}`,
      LockTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      DataSource:`${Object.values(Mock.mock({"object|1": {"操作录入": "操作录入","外部导入": "外部导入","自动生成":"自动生成","Excle导入":"Excel导入"}}).object)[0]}`,
      IsAdjustedFee:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      FeeModifier:Mock.mock('@cname()'),
      SettlementAgent:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      FeeSyncStatus:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      ModifyFeeApplicationProgress:Mock.mock({"string|1-10": "★"}).string,
      AllocationRelatedBusiness:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      AllocationType:`${Object.values(Mock.mock({"object|1": {"平均分配": "平均分配","按体积": "按体积","按重量": "按重量"}}).object)[0]}`,
      RelatedFeeId:Mock.mock("@id"),
      FeeId:Mock.mock("@id"),
      CreditDebit:`${Object.values(Mock.mock({"object|1": {"收": "收","支": "支"}}).object)[0]}`,
  },  
  {
      SettlementCompany:`${Object.values(Mock.mock({"object|1": {"青岛子公司": "青岛子公司","上海子公司": "上海子公司","深圳子公司": "深圳子公司","西安子公司": "西安子公司"}}).object)[0]}`,
      FeeName:`${Object.values(Mock.mock({"object|1": {"海运费": "海运费","空运费": "空运费","报关费": "报关费","仓储费": "仓储费"}}).object)[0]}`,
      SettlementType:`${Object.values(Mock.mock({"object|1": {"票结": "票结","月结": "月结","半月结": "半月结","周结": "周结"}}).object)[0]}`,
      SettlementObject:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      InvoiceTitle:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      DomesticForeign:`${Object.values(Mock.mock({"object|1": {"国内": "国内","国外": "国外"}}).object)[0]}`,
      NeedInvoice:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Currency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      ExchangeRate:Mock.mock('@float(1, 10, 0, 2)'),
      Unit:`${Object.values(Mock.mock({"object|1": {"箱数": "箱数","普通价": "普通价"}}).object)[0]}`,
      Quantity:Mock.mock('@float(60, 100, 0, 2)'),
      UnitPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxIncludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxExcludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxRate:Mock.mock('@float(60, 100, 0, 2)'),
      TaxAmount:Mock.mock('@float(60, 100, 0, 2)'),
      RmbEquivalent:Mock.mock('@float(60, 100, 0, 2)'),
      LocalCurrency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      Reviewer:Mock.mock('@cname()'),
      Remarks:Mock.mock('@ctitle(5)'),
      ContactPerson:Mock.mock('@cname()'),
      AssociatedBillNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      AssociatedContainerNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      PrepaidCollect:`${Object.values(Mock.mock({"object|1": {"预付": "预付","到付": "到付"}}).object)[0]}`,
      Status:`${Object.values(Mock.mock({"object|1": {"未提交": "未提交","已提交": "已提交","未审核":"未审核","已审核":"已审核","已归档":"已归档"}}).object)[0]}`,
      IsConfirmed:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      AgentSplitBillNumber:Mock.mock({'regexp': /AC\d{5,10}/}).regexp,
      BillNumber:Mock.mock({'regexp': /BN\d{5,10}/}).regexp,
      AccrualDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      InvoiceNumber:Mock.mock({'regexp': /RI\d{5,10}/}).regexp,
      InvoiceDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      CounterpartBillNumber:Mock.mock({'regexp': /CP\d{5,10}/}).regexp,
      PaymentApplicationNumber:Mock.mock({'regexp': /PR\d{5,10}/}).regexp,
      WriteOffAmount:Mock.mock('@float(60, 100, 0, 2)'),
      UnadjustedAmount:Mock.mock('@float(60, 100, 0, 2)'),
      WriteOffDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      PaymentDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      FinancialDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      BusinessNumber:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      Creator:Mock.mock('@cname()'),
      CreateTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      Modifier:Mock.mock('@cname()'),
      ModifyTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      WriteOffSerialNumber:Mock.mock({'regexp': /HX\d{5,10}/}).regexp,
      IsVoucherGenerated:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Allocation:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      LockStatus:`${Object.values(Mock.mock({"object|1": {"未锁定": "未锁定","已锁定": "已锁定"}}).object)[0]}`,
      LockTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      DataSource:`${Object.values(Mock.mock({"object|1": {"操作录入": "操作录入","外部导入": "外部导入","自动生成":"自动生成","Excle导入":"Excel导入"}}).object)[0]}`,
      IsAdjustedFee:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      FeeModifier:Mock.mock('@cname()'),
      SettlementAgent:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      FeeSyncStatus:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      ModifyFeeApplicationProgress:Mock.mock({"string|1-10": "★"}).string,
      AllocationRelatedBusiness:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      AllocationType:`${Object.values(Mock.mock({"object|1": {"平均分配": "平均分配","按体积": "按体积","按重量": "按重量"}}).object)[0]}`,
      RelatedFeeId:Mock.mock("@id"),
      FeeId:Mock.mock("@id"),
      CreditDebit:`${Object.values(Mock.mock({"object|1": {"收": "收","支": "支"}}).object)[0]}`,
  },  
  {
      SettlementCompany:`${Object.values(Mock.mock({"object|1": {"青岛子公司": "青岛子公司","上海子公司": "上海子公司","深圳子公司": "深圳子公司","西安子公司": "西安子公司"}}).object)[0]}`,
      FeeName:`${Object.values(Mock.mock({"object|1": {"海运费": "海运费","空运费": "空运费","报关费": "报关费","仓储费": "仓储费"}}).object)[0]}`,
      SettlementType:`${Object.values(Mock.mock({"object|1": {"票结": "票结","月结": "月结","半月结": "半月结","周结": "周结"}}).object)[0]}`,
      SettlementObject:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      InvoiceTitle:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      DomesticForeign:`${Object.values(Mock.mock({"object|1": {"国内": "国内","国外": "国外"}}).object)[0]}`,
      NeedInvoice:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Currency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      ExchangeRate:Mock.mock('@float(1, 10, 0, 2)'),
      Unit:`${Object.values(Mock.mock({"object|1": {"箱数": "箱数","普通价": "普通价"}}).object)[0]}`,
      Quantity:Mock.mock('@float(60, 100, 0, 2)'),
      UnitPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxIncludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxExcludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxRate:Mock.mock('@float(60, 100, 0, 2)'),
      TaxAmount:Mock.mock('@float(60, 100, 0, 2)'),
      RmbEquivalent:Mock.mock('@float(60, 100, 0, 2)'),
      LocalCurrency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      Reviewer:Mock.mock('@cname()'),
      Remarks:Mock.mock('@ctitle(5)'),
      ContactPerson:Mock.mock('@cname()'),
      AssociatedBillNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      AssociatedContainerNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      PrepaidCollect:`${Object.values(Mock.mock({"object|1": {"预付": "预付","到付": "到付"}}).object)[0]}`,
      Status:`${Object.values(Mock.mock({"object|1": {"未提交": "未提交","已提交": "已提交","未审核":"未审核","已审核":"已审核","已归档":"已归档"}}).object)[0]}`,
      IsConfirmed:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      AgentSplitBillNumber:Mock.mock({'regexp': /AC\d{5,10}/}).regexp,
      BillNumber:Mock.mock({'regexp': /BN\d{5,10}/}).regexp,
      AccrualDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      InvoiceNumber:Mock.mock({'regexp': /RI\d{5,10}/}).regexp,
      InvoiceDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      CounterpartBillNumber:Mock.mock({'regexp': /CP\d{5,10}/}).regexp,
      PaymentApplicationNumber:Mock.mock({'regexp': /PR\d{5,10}/}).regexp,
      WriteOffAmount:Mock.mock('@float(60, 100, 0, 2)'),
      UnadjustedAmount:Mock.mock('@float(60, 100, 0, 2)'),
      WriteOffDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      PaymentDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      FinancialDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      BusinessNumber:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      Creator:Mock.mock('@cname()'),
      CreateTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      Modifier:Mock.mock('@cname()'),
      ModifyTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      WriteOffSerialNumber:Mock.mock({'regexp': /HX\d{5,10}/}).regexp,
      IsVoucherGenerated:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Allocation:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      LockStatus:`${Object.values(Mock.mock({"object|1": {"未锁定": "未锁定","已锁定": "已锁定"}}).object)[0]}`,
      LockTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      DataSource:`${Object.values(Mock.mock({"object|1": {"操作录入": "操作录入","外部导入": "外部导入","自动生成":"自动生成","Excle导入":"Excel导入"}}).object)[0]}`,
      IsAdjustedFee:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      FeeModifier:Mock.mock('@cname()'),
      SettlementAgent:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      FeeSyncStatus:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      ModifyFeeApplicationProgress:Mock.mock({"string|1-10": "★"}).string,
      AllocationRelatedBusiness:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      AllocationType:`${Object.values(Mock.mock({"object|1": {"平均分配": "平均分配","按体积": "按体积","按重量": "按重量"}}).object)[0]}`,
      RelatedFeeId:Mock.mock("@id"),
      FeeId:Mock.mock("@id"),
      CreditDebit:`${Object.values(Mock.mock({"object|1": {"收": "收","支": "支"}}).object)[0]}`,
  },  
  {
      SettlementCompany:`${Object.values(Mock.mock({"object|1": {"青岛子公司": "青岛子公司","上海子公司": "上海子公司","深圳子公司": "深圳子公司","西安子公司": "西安子公司"}}).object)[0]}`,
      FeeName:`${Object.values(Mock.mock({"object|1": {"海运费": "海运费","空运费": "空运费","报关费": "报关费","仓储费": "仓储费"}}).object)[0]}`,
      SettlementType:`${Object.values(Mock.mock({"object|1": {"票结": "票结","月结": "月结","半月结": "半月结","周结": "周结"}}).object)[0]}`,
      SettlementObject:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      InvoiceTitle:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      DomesticForeign:`${Object.values(Mock.mock({"object|1": {"国内": "国内","国外": "国外"}}).object)[0]}`,
      NeedInvoice:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Currency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      ExchangeRate:Mock.mock('@float(1, 10, 0, 2)'),
      Unit:`${Object.values(Mock.mock({"object|1": {"箱数": "箱数","普通价": "普通价"}}).object)[0]}`,
      Quantity:Mock.mock('@float(60, 100, 0, 2)'),
      UnitPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxIncludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxExcludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxRate:Mock.mock('@float(60, 100, 0, 2)'),
      TaxAmount:Mock.mock('@float(60, 100, 0, 2)'),
      RmbEquivalent:Mock.mock('@float(60, 100, 0, 2)'),
      LocalCurrency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      Reviewer:Mock.mock('@cname()'),
      Remarks:Mock.mock('@ctitle(5)'),
      ContactPerson:Mock.mock('@cname()'),
      AssociatedBillNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      AssociatedContainerNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      PrepaidCollect:`${Object.values(Mock.mock({"object|1": {"预付": "预付","到付": "到付"}}).object)[0]}`,
      Status:`${Object.values(Mock.mock({"object|1": {"未提交": "未提交","已提交": "已提交","未审核":"未审核","已审核":"已审核","已归档":"已归档"}}).object)[0]}`,
      IsConfirmed:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      AgentSplitBillNumber:Mock.mock({'regexp': /AC\d{5,10}/}).regexp,
      BillNumber:Mock.mock({'regexp': /BN\d{5,10}/}).regexp,
      AccrualDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      InvoiceNumber:Mock.mock({'regexp': /RI\d{5,10}/}).regexp,
      InvoiceDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      CounterpartBillNumber:Mock.mock({'regexp': /CP\d{5,10}/}).regexp,
      PaymentApplicationNumber:Mock.mock({'regexp': /PR\d{5,10}/}).regexp,
      WriteOffAmount:Mock.mock('@float(60, 100, 0, 2)'),
      UnadjustedAmount:Mock.mock('@float(60, 100, 0, 2)'),
      WriteOffDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      PaymentDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      FinancialDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      BusinessNumber:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      Creator:Mock.mock('@cname()'),
      CreateTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      Modifier:Mock.mock('@cname()'),
      ModifyTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      WriteOffSerialNumber:Mock.mock({'regexp': /HX\d{5,10}/}).regexp,
      IsVoucherGenerated:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Allocation:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      LockStatus:`${Object.values(Mock.mock({"object|1": {"未锁定": "未锁定","已锁定": "已锁定"}}).object)[0]}`,
      LockTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      DataSource:`${Object.values(Mock.mock({"object|1": {"操作录入": "操作录入","外部导入": "外部导入","自动生成":"自动生成","Excle导入":"Excel导入"}}).object)[0]}`,
      IsAdjustedFee:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      FeeModifier:Mock.mock('@cname()'),
      SettlementAgent:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      FeeSyncStatus:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      ModifyFeeApplicationProgress:Mock.mock({"string|1-10": "★"}).string,
      AllocationRelatedBusiness:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      AllocationType:`${Object.values(Mock.mock({"object|1": {"平均分配": "平均分配","按体积": "按体积","按重量": "按重量"}}).object)[0]}`,
      RelatedFeeId:Mock.mock("@id"),
      FeeId:Mock.mock("@id"),
      CreditDebit:`${Object.values(Mock.mock({"object|1": {"收": "收","支": "支"}}).object)[0]}`,
  },  
  {
      SettlementCompany:`${Object.values(Mock.mock({"object|1": {"青岛子公司": "青岛子公司","上海子公司": "上海子公司","深圳子公司": "深圳子公司","西安子公司": "西安子公司"}}).object)[0]}`,
      FeeName:`${Object.values(Mock.mock({"object|1": {"海运费": "海运费","空运费": "空运费","报关费": "报关费","仓储费": "仓储费"}}).object)[0]}`,
      SettlementType:`${Object.values(Mock.mock({"object|1": {"票结": "票结","月结": "月结","半月结": "半月结","周结": "周结"}}).object)[0]}`,
      SettlementObject:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      InvoiceTitle:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      DomesticForeign:`${Object.values(Mock.mock({"object|1": {"国内": "国内","国外": "国外"}}).object)[0]}`,
      NeedInvoice:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Currency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      ExchangeRate:Mock.mock('@float(1, 10, 0, 2)'),
      Unit:`${Object.values(Mock.mock({"object|1": {"箱数": "箱数","普通价": "普通价"}}).object)[0]}`,
      Quantity:Mock.mock('@float(60, 100, 0, 2)'),
      UnitPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxIncludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxExcludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxRate:Mock.mock('@float(60, 100, 0, 2)'),
      TaxAmount:Mock.mock('@float(60, 100, 0, 2)'),
      RmbEquivalent:Mock.mock('@float(60, 100, 0, 2)'),
      LocalCurrency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      Reviewer:Mock.mock('@cname()'),
      Remarks:Mock.mock('@ctitle(5)'),
      ContactPerson:Mock.mock('@cname()'),
      AssociatedBillNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      AssociatedContainerNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      PrepaidCollect:`${Object.values(Mock.mock({"object|1": {"预付": "预付","到付": "到付"}}).object)[0]}`,
      Status:`${Object.values(Mock.mock({"object|1": {"未提交": "未提交","已提交": "已提交","未审核":"未审核","已审核":"已审核","已归档":"已归档"}}).object)[0]}`,
      IsConfirmed:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      AgentSplitBillNumber:Mock.mock({'regexp': /AC\d{5,10}/}).regexp,
      BillNumber:Mock.mock({'regexp': /BN\d{5,10}/}).regexp,
      AccrualDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      InvoiceNumber:Mock.mock({'regexp': /RI\d{5,10}/}).regexp,
      InvoiceDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      CounterpartBillNumber:Mock.mock({'regexp': /CP\d{5,10}/}).regexp,
      PaymentApplicationNumber:Mock.mock({'regexp': /PR\d{5,10}/}).regexp,
      WriteOffAmount:Mock.mock('@float(60, 100, 0, 2)'),
      UnadjustedAmount:Mock.mock('@float(60, 100, 0, 2)'),
      WriteOffDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      PaymentDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      FinancialDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      BusinessNumber:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      Creator:Mock.mock('@cname()'),
      CreateTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      Modifier:Mock.mock('@cname()'),
      ModifyTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      WriteOffSerialNumber:Mock.mock({'regexp': /HX\d{5,10}/}).regexp,
      IsVoucherGenerated:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Allocation:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      LockStatus:`${Object.values(Mock.mock({"object|1": {"未锁定": "未锁定","已锁定": "已锁定"}}).object)[0]}`,
      LockTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      DataSource:`${Object.values(Mock.mock({"object|1": {"操作录入": "操作录入","外部导入": "外部导入","自动生成":"自动生成","Excle导入":"Excel导入"}}).object)[0]}`,
      IsAdjustedFee:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      FeeModifier:Mock.mock('@cname()'),
      SettlementAgent:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      FeeSyncStatus:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      ModifyFeeApplicationProgress:Mock.mock({"string|1-10": "★"}).string,
      AllocationRelatedBusiness:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      AllocationType:`${Object.values(Mock.mock({"object|1": {"平均分配": "平均分配","按体积": "按体积","按重量": "按重量"}}).object)[0]}`,
      RelatedFeeId:Mock.mock("@id"),
      FeeId:Mock.mock("@id"),
      CreditDebit:`${Object.values(Mock.mock({"object|1": {"收": "收","支": "支"}}).object)[0]}`,
  },  
  {
      SettlementCompany:`${Object.values(Mock.mock({"object|1": {"青岛子公司": "青岛子公司","上海子公司": "上海子公司","深圳子公司": "深圳子公司","西安子公司": "西安子公司"}}).object)[0]}`,
      FeeName:`${Object.values(Mock.mock({"object|1": {"海运费": "海运费","空运费": "空运费","报关费": "报关费","仓储费": "仓储费"}}).object)[0]}`,
      SettlementType:`${Object.values(Mock.mock({"object|1": {"票结": "票结","月结": "月结","半月结": "半月结","周结": "周结"}}).object)[0]}`,
      SettlementObject:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      InvoiceTitle:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      DomesticForeign:`${Object.values(Mock.mock({"object|1": {"国内": "国内","国外": "国外"}}).object)[0]}`,
      NeedInvoice:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Currency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      ExchangeRate:Mock.mock('@float(1, 10, 0, 2)'),
      Unit:`${Object.values(Mock.mock({"object|1": {"箱数": "箱数","普通价": "普通价"}}).object)[0]}`,
      Quantity:Mock.mock('@float(60, 100, 0, 2)'),
      UnitPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxIncludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxExcludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxRate:Mock.mock('@float(60, 100, 0, 2)'),
      TaxAmount:Mock.mock('@float(60, 100, 0, 2)'),
      RmbEquivalent:Mock.mock('@float(60, 100, 0, 2)'),
      LocalCurrency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      Reviewer:Mock.mock('@cname()'),
      Remarks:Mock.mock('@ctitle(5)'),
      ContactPerson:Mock.mock('@cname()'),
      AssociatedBillNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      AssociatedContainerNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      PrepaidCollect:`${Object.values(Mock.mock({"object|1": {"预付": "预付","到付": "到付"}}).object)[0]}`,
      Status:`${Object.values(Mock.mock({"object|1": {"未提交": "未提交","已提交": "已提交","未审核":"未审核","已审核":"已审核","已归档":"已归档"}}).object)[0]}`,
      IsConfirmed:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      AgentSplitBillNumber:Mock.mock({'regexp': /AC\d{5,10}/}).regexp,
      BillNumber:Mock.mock({'regexp': /BN\d{5,10}/}).regexp,
      AccrualDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      InvoiceNumber:Mock.mock({'regexp': /RI\d{5,10}/}).regexp,
      InvoiceDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      CounterpartBillNumber:Mock.mock({'regexp': /CP\d{5,10}/}).regexp,
      PaymentApplicationNumber:Mock.mock({'regexp': /PR\d{5,10}/}).regexp,
      WriteOffAmount:Mock.mock('@float(60, 100, 0, 2)'),
      UnadjustedAmount:Mock.mock('@float(60, 100, 0, 2)'),
      WriteOffDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      PaymentDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      FinancialDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      BusinessNumber:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      Creator:Mock.mock('@cname()'),
      CreateTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      Modifier:Mock.mock('@cname()'),
      ModifyTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      WriteOffSerialNumber:Mock.mock({'regexp': /HX\d{5,10}/}).regexp,
      IsVoucherGenerated:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Allocation:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      LockStatus:`${Object.values(Mock.mock({"object|1": {"未锁定": "未锁定","已锁定": "已锁定"}}).object)[0]}`,
      LockTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      DataSource:`${Object.values(Mock.mock({"object|1": {"操作录入": "操作录入","外部导入": "外部导入","自动生成":"自动生成","Excle导入":"Excel导入"}}).object)[0]}`,
      IsAdjustedFee:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      FeeModifier:Mock.mock('@cname()'),
      SettlementAgent:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      FeeSyncStatus:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      ModifyFeeApplicationProgress:Mock.mock({"string|1-10": "★"}).string,
      AllocationRelatedBusiness:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      AllocationType:`${Object.values(Mock.mock({"object|1": {"平均分配": "平均分配","按体积": "按体积","按重量": "按重量"}}).object)[0]}`,
      RelatedFeeId:Mock.mock("@id"),
      FeeId:Mock.mock("@id"),
      CreditDebit:`${Object.values(Mock.mock({"object|1": {"收": "收","支": "支"}}).object)[0]}`,
  },  
  {
      SettlementCompany:`${Object.values(Mock.mock({"object|1": {"青岛子公司": "青岛子公司","上海子公司": "上海子公司","深圳子公司": "深圳子公司","西安子公司": "西安子公司"}}).object)[0]}`,
      FeeName:`${Object.values(Mock.mock({"object|1": {"海运费": "海运费","空运费": "空运费","报关费": "报关费","仓储费": "仓储费"}}).object)[0]}`,
      SettlementType:`${Object.values(Mock.mock({"object|1": {"票结": "票结","月结": "月结","半月结": "半月结","周结": "周结"}}).object)[0]}`,
      SettlementObject:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      InvoiceTitle:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      DomesticForeign:`${Object.values(Mock.mock({"object|1": {"国内": "国内","国外": "国外"}}).object)[0]}`,
      NeedInvoice:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Currency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      ExchangeRate:Mock.mock('@float(1, 10, 0, 2)'),
      Unit:`${Object.values(Mock.mock({"object|1": {"箱数": "箱数","普通价": "普通价"}}).object)[0]}`,
      Quantity:Mock.mock('@float(60, 100, 0, 2)'),
      UnitPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxIncludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxExcludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxRate:Mock.mock('@float(60, 100, 0, 2)'),
      TaxAmount:Mock.mock('@float(60, 100, 0, 2)'),
      RmbEquivalent:Mock.mock('@float(60, 100, 0, 2)'),
      LocalCurrency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      Reviewer:Mock.mock('@cname()'),
      Remarks:Mock.mock('@ctitle(5)'),
      ContactPerson:Mock.mock('@cname()'),
      AssociatedBillNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      AssociatedContainerNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      PrepaidCollect:`${Object.values(Mock.mock({"object|1": {"预付": "预付","到付": "到付"}}).object)[0]}`,
      Status:`${Object.values(Mock.mock({"object|1": {"未提交": "未提交","已提交": "已提交","未审核":"未审核","已审核":"已审核","已归档":"已归档"}}).object)[0]}`,
      IsConfirmed:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      AgentSplitBillNumber:Mock.mock({'regexp': /AC\d{5,10}/}).regexp,
      BillNumber:Mock.mock({'regexp': /BN\d{5,10}/}).regexp,
      AccrualDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      InvoiceNumber:Mock.mock({'regexp': /RI\d{5,10}/}).regexp,
      InvoiceDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      CounterpartBillNumber:Mock.mock({'regexp': /CP\d{5,10}/}).regexp,
      PaymentApplicationNumber:Mock.mock({'regexp': /PR\d{5,10}/}).regexp,
      WriteOffAmount:Mock.mock('@float(60, 100, 0, 2)'),
      UnadjustedAmount:Mock.mock('@float(60, 100, 0, 2)'),
      WriteOffDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      PaymentDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      FinancialDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      BusinessNumber:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      Creator:Mock.mock('@cname()'),
      CreateTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      Modifier:Mock.mock('@cname()'),
      ModifyTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      WriteOffSerialNumber:Mock.mock({'regexp': /HX\d{5,10}/}).regexp,
      IsVoucherGenerated:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Allocation:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      LockStatus:`${Object.values(Mock.mock({"object|1": {"未锁定": "未锁定","已锁定": "已锁定"}}).object)[0]}`,
      LockTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      DataSource:`${Object.values(Mock.mock({"object|1": {"操作录入": "操作录入","外部导入": "外部导入","自动生成":"自动生成","Excle导入":"Excel导入"}}).object)[0]}`,
      IsAdjustedFee:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      FeeModifier:Mock.mock('@cname()'),
      SettlementAgent:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      FeeSyncStatus:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      ModifyFeeApplicationProgress:Mock.mock({"string|1-10": "★"}).string,
      AllocationRelatedBusiness:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      AllocationType:`${Object.values(Mock.mock({"object|1": {"平均分配": "平均分配","按体积": "按体积","按重量": "按重量"}}).object)[0]}`,
      RelatedFeeId:Mock.mock("@id"),
      FeeId:Mock.mock("@id"),
      CreditDebit:`${Object.values(Mock.mock({"object|1": {"收": "收","支": "支"}}).object)[0]}`,
  },  
  {
      SettlementCompany:`${Object.values(Mock.mock({"object|1": {"青岛子公司": "青岛子公司","上海子公司": "上海子公司","深圳子公司": "深圳子公司","西安子公司": "西安子公司"}}).object)[0]}`,
      FeeName:`${Object.values(Mock.mock({"object|1": {"海运费": "海运费","空运费": "空运费","报关费": "报关费","仓储费": "仓储费"}}).object)[0]}`,
      SettlementType:`${Object.values(Mock.mock({"object|1": {"票结": "票结","月结": "月结","半月结": "半月结","周结": "周结"}}).object)[0]}`,
      SettlementObject:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      InvoiceTitle:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      DomesticForeign:`${Object.values(Mock.mock({"object|1": {"国内": "国内","国外": "国外"}}).object)[0]}`,
      NeedInvoice:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Currency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      ExchangeRate:Mock.mock('@float(1, 10, 0, 2)'),
      Unit:`${Object.values(Mock.mock({"object|1": {"箱数": "箱数","普通价": "普通价"}}).object)[0]}`,
      Quantity:Mock.mock('@float(60, 100, 0, 2)'),
      UnitPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxIncludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxExcludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxRate:Mock.mock('@float(60, 100, 0, 2)'),
      TaxAmount:Mock.mock('@float(60, 100, 0, 2)'),
      RmbEquivalent:Mock.mock('@float(60, 100, 0, 2)'),
      LocalCurrency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      Reviewer:Mock.mock('@cname()'),
      Remarks:Mock.mock('@ctitle(5)'),
      ContactPerson:Mock.mock('@cname()'),
      AssociatedBillNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      AssociatedContainerNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      PrepaidCollect:`${Object.values(Mock.mock({"object|1": {"预付": "预付","到付": "到付"}}).object)[0]}`,
      Status:`${Object.values(Mock.mock({"object|1": {"未提交": "未提交","已提交": "已提交","未审核":"未审核","已审核":"已审核","已归档":"已归档"}}).object)[0]}`,
      IsConfirmed:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      AgentSplitBillNumber:Mock.mock({'regexp': /AC\d{5,10}/}).regexp,
      BillNumber:Mock.mock({'regexp': /BN\d{5,10}/}).regexp,
      AccrualDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      InvoiceNumber:Mock.mock({'regexp': /RI\d{5,10}/}).regexp,
      InvoiceDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      CounterpartBillNumber:Mock.mock({'regexp': /CP\d{5,10}/}).regexp,
      PaymentApplicationNumber:Mock.mock({'regexp': /PR\d{5,10}/}).regexp,
      WriteOffAmount:Mock.mock('@float(60, 100, 0, 2)'),
      UnadjustedAmount:Mock.mock('@float(60, 100, 0, 2)'),
      WriteOffDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      PaymentDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      FinancialDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      BusinessNumber:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      Creator:Mock.mock('@cname()'),
      CreateTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      Modifier:Mock.mock('@cname()'),
      ModifyTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      WriteOffSerialNumber:Mock.mock({'regexp': /HX\d{5,10}/}).regexp,
      IsVoucherGenerated:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Allocation:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      LockStatus:`${Object.values(Mock.mock({"object|1": {"未锁定": "未锁定","已锁定": "已锁定"}}).object)[0]}`,
      LockTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      DataSource:`${Object.values(Mock.mock({"object|1": {"操作录入": "操作录入","外部导入": "外部导入","自动生成":"自动生成","Excle导入":"Excel导入"}}).object)[0]}`,
      IsAdjustedFee:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      FeeModifier:Mock.mock('@cname()'),
      SettlementAgent:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      FeeSyncStatus:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      ModifyFeeApplicationProgress:Mock.mock({"string|1-10": "★"}).string,
      AllocationRelatedBusiness:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      AllocationType:`${Object.values(Mock.mock({"object|1": {"平均分配": "平均分配","按体积": "按体积","按重量": "按重量"}}).object)[0]}`,
      RelatedFeeId:Mock.mock("@id"),
      FeeId:Mock.mock("@id"),
      CreditDebit:`${Object.values(Mock.mock({"object|1": {"收": "收","支": "支"}}).object)[0]}`,
  },  
  {
      SettlementCompany:`${Object.values(Mock.mock({"object|1": {"青岛子公司": "青岛子公司","上海子公司": "上海子公司","深圳子公司": "深圳子公司","西安子公司": "西安子公司"}}).object)[0]}`,
      FeeName:`${Object.values(Mock.mock({"object|1": {"海运费": "海运费","空运费": "空运费","报关费": "报关费","仓储费": "仓储费"}}).object)[0]}`,
      SettlementType:`${Object.values(Mock.mock({"object|1": {"票结": "票结","月结": "月结","半月结": "半月结","周结": "周结"}}).object)[0]}`,
      SettlementObject:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      InvoiceTitle:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      DomesticForeign:`${Object.values(Mock.mock({"object|1": {"国内": "国内","国外": "国外"}}).object)[0]}`,
      NeedInvoice:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Currency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      ExchangeRate:Mock.mock('@float(1, 10, 0, 2)'),
      Unit:`${Object.values(Mock.mock({"object|1": {"箱数": "箱数","普通价": "普通价"}}).object)[0]}`,
      Quantity:Mock.mock('@float(60, 100, 0, 2)'),
      UnitPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxIncludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxExcludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxRate:Mock.mock('@float(60, 100, 0, 2)'),
      TaxAmount:Mock.mock('@float(60, 100, 0, 2)'),
      RmbEquivalent:Mock.mock('@float(60, 100, 0, 2)'),
      LocalCurrency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      Reviewer:Mock.mock('@cname()'),
      Remarks:Mock.mock('@ctitle(5)'),
      ContactPerson:Mock.mock('@cname()'),
      AssociatedBillNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      AssociatedContainerNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      PrepaidCollect:`${Object.values(Mock.mock({"object|1": {"预付": "预付","到付": "到付"}}).object)[0]}`,
      Status:`${Object.values(Mock.mock({"object|1": {"未提交": "未提交","已提交": "已提交","未审核":"未审核","已审核":"已审核","已归档":"已归档"}}).object)[0]}`,
      IsConfirmed:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      AgentSplitBillNumber:Mock.mock({'regexp': /AC\d{5,10}/}).regexp,
      BillNumber:Mock.mock({'regexp': /BN\d{5,10}/}).regexp,
      AccrualDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      InvoiceNumber:Mock.mock({'regexp': /RI\d{5,10}/}).regexp,
      InvoiceDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      CounterpartBillNumber:Mock.mock({'regexp': /CP\d{5,10}/}).regexp,
      PaymentApplicationNumber:Mock.mock({'regexp': /PR\d{5,10}/}).regexp,
      WriteOffAmount:Mock.mock('@float(60, 100, 0, 2)'),
      UnadjustedAmount:Mock.mock('@float(60, 100, 0, 2)'),
      WriteOffDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      PaymentDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      FinancialDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      BusinessNumber:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      Creator:Mock.mock('@cname()'),
      CreateTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      Modifier:Mock.mock('@cname()'),
      ModifyTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      WriteOffSerialNumber:Mock.mock({'regexp': /HX\d{5,10}/}).regexp,
      IsVoucherGenerated:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Allocation:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      LockStatus:`${Object.values(Mock.mock({"object|1": {"未锁定": "未锁定","已锁定": "已锁定"}}).object)[0]}`,
      LockTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      DataSource:`${Object.values(Mock.mock({"object|1": {"操作录入": "操作录入","外部导入": "外部导入","自动生成":"自动生成","Excle导入":"Excel导入"}}).object)[0]}`,
      IsAdjustedFee:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      FeeModifier:Mock.mock('@cname()'),
      SettlementAgent:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      FeeSyncStatus:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      ModifyFeeApplicationProgress:Mock.mock({"string|1-10": "★"}).string,
      AllocationRelatedBusiness:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      AllocationType:`${Object.values(Mock.mock({"object|1": {"平均分配": "平均分配","按体积": "按体积","按重量": "按重量"}}).object)[0]}`,
      RelatedFeeId:Mock.mock("@id"),
      FeeId:Mock.mock("@id"),
      CreditDebit:`${Object.values(Mock.mock({"object|1": {"收": "收","支": "支"}}).object)[0]}`,
  },  
  {
      SettlementCompany:`${Object.values(Mock.mock({"object|1": {"青岛子公司": "青岛子公司","上海子公司": "上海子公司","深圳子公司": "深圳子公司","西安子公司": "西安子公司"}}).object)[0]}`,
      FeeName:`${Object.values(Mock.mock({"object|1": {"海运费": "海运费","空运费": "空运费","报关费": "报关费","仓储费": "仓储费"}}).object)[0]}`,
      SettlementType:`${Object.values(Mock.mock({"object|1": {"票结": "票结","月结": "月结","半月结": "半月结","周结": "周结"}}).object)[0]}`,
      SettlementObject:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      InvoiceTitle:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      DomesticForeign:`${Object.values(Mock.mock({"object|1": {"国内": "国内","国外": "国外"}}).object)[0]}`,
      NeedInvoice:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Currency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      ExchangeRate:Mock.mock('@float(1, 10, 0, 2)'),
      Unit:`${Object.values(Mock.mock({"object|1": {"箱数": "箱数","普通价": "普通价"}}).object)[0]}`,
      Quantity:Mock.mock('@float(60, 100, 0, 2)'),
      UnitPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxIncludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxExcludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxRate:Mock.mock('@float(60, 100, 0, 2)'),
      TaxAmount:Mock.mock('@float(60, 100, 0, 2)'),
      RmbEquivalent:Mock.mock('@float(60, 100, 0, 2)'),
      LocalCurrency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      Reviewer:Mock.mock('@cname()'),
      Remarks:Mock.mock('@ctitle(5)'),
      ContactPerson:Mock.mock('@cname()'),
      AssociatedBillNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      AssociatedContainerNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      PrepaidCollect:`${Object.values(Mock.mock({"object|1": {"预付": "预付","到付": "到付"}}).object)[0]}`,
      Status:`${Object.values(Mock.mock({"object|1": {"未提交": "未提交","已提交": "已提交","未审核":"未审核","已审核":"已审核","已归档":"已归档"}}).object)[0]}`,
      IsConfirmed:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      AgentSplitBillNumber:Mock.mock({'regexp': /AC\d{5,10}/}).regexp,
      BillNumber:Mock.mock({'regexp': /BN\d{5,10}/}).regexp,
      AccrualDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      InvoiceNumber:Mock.mock({'regexp': /RI\d{5,10}/}).regexp,
      InvoiceDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      CounterpartBillNumber:Mock.mock({'regexp': /CP\d{5,10}/}).regexp,
      PaymentApplicationNumber:Mock.mock({'regexp': /PR\d{5,10}/}).regexp,
      WriteOffAmount:Mock.mock('@float(60, 100, 0, 2)'),
      UnadjustedAmount:Mock.mock('@float(60, 100, 0, 2)'),
      WriteOffDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      PaymentDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      FinancialDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      BusinessNumber:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      Creator:Mock.mock('@cname()'),
      CreateTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      Modifier:Mock.mock('@cname()'),
      ModifyTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      WriteOffSerialNumber:Mock.mock({'regexp': /HX\d{5,10}/}).regexp,
      IsVoucherGenerated:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Allocation:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      LockStatus:`${Object.values(Mock.mock({"object|1": {"未锁定": "未锁定","已锁定": "已锁定"}}).object)[0]}`,
      LockTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      DataSource:`${Object.values(Mock.mock({"object|1": {"操作录入": "操作录入","外部导入": "外部导入","自动生成":"自动生成","Excle导入":"Excel导入"}}).object)[0]}`,
      IsAdjustedFee:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      FeeModifier:Mock.mock('@cname()'),
      SettlementAgent:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      FeeSyncStatus:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      ModifyFeeApplicationProgress:Mock.mock({"string|1-10": "★"}).string,
      AllocationRelatedBusiness:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      AllocationType:`${Object.values(Mock.mock({"object|1": {"平均分配": "平均分配","按体积": "按体积","按重量": "按重量"}}).object)[0]}`,
      RelatedFeeId:Mock.mock("@id"),
      FeeId:Mock.mock("@id"),
      CreditDebit:`${Object.values(Mock.mock({"object|1": {"收": "收","支": "支"}}).object)[0]}`,
  },  
  {
      SettlementCompany:`${Object.values(Mock.mock({"object|1": {"青岛子公司": "青岛子公司","上海子公司": "上海子公司","深圳子公司": "深圳子公司","西安子公司": "西安子公司"}}).object)[0]}`,
      FeeName:`${Object.values(Mock.mock({"object|1": {"海运费": "海运费","空运费": "空运费","报关费": "报关费","仓储费": "仓储费"}}).object)[0]}`,
      SettlementType:`${Object.values(Mock.mock({"object|1": {"票结": "票结","月结": "月结","半月结": "半月结","周结": "周结"}}).object)[0]}`,
      SettlementObject:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      InvoiceTitle:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      DomesticForeign:`${Object.values(Mock.mock({"object|1": {"国内": "国内","国外": "国外"}}).object)[0]}`,
      NeedInvoice:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Currency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      ExchangeRate:Mock.mock('@float(1, 10, 0, 2)'),
      Unit:`${Object.values(Mock.mock({"object|1": {"箱数": "箱数","普通价": "普通价"}}).object)[0]}`,
      Quantity:Mock.mock('@float(60, 100, 0, 2)'),
      UnitPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxIncludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxExcludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxRate:Mock.mock('@float(60, 100, 0, 2)'),
      TaxAmount:Mock.mock('@float(60, 100, 0, 2)'),
      RmbEquivalent:Mock.mock('@float(60, 100, 0, 2)'),
      LocalCurrency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      Reviewer:Mock.mock('@cname()'),
      Remarks:Mock.mock('@ctitle(5)'),
      ContactPerson:Mock.mock('@cname()'),
      AssociatedBillNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      AssociatedContainerNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      PrepaidCollect:`${Object.values(Mock.mock({"object|1": {"预付": "预付","到付": "到付"}}).object)[0]}`,
      Status:`${Object.values(Mock.mock({"object|1": {"未提交": "未提交","已提交": "已提交","未审核":"未审核","已审核":"已审核","已归档":"已归档"}}).object)[0]}`,
      IsConfirmed:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      AgentSplitBillNumber:Mock.mock({'regexp': /AC\d{5,10}/}).regexp,
      BillNumber:Mock.mock({'regexp': /BN\d{5,10}/}).regexp,
      AccrualDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      InvoiceNumber:Mock.mock({'regexp': /RI\d{5,10}/}).regexp,
      InvoiceDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      CounterpartBillNumber:Mock.mock({'regexp': /CP\d{5,10}/}).regexp,
      PaymentApplicationNumber:Mock.mock({'regexp': /PR\d{5,10}/}).regexp,
      WriteOffAmount:Mock.mock('@float(60, 100, 0, 2)'),
      UnadjustedAmount:Mock.mock('@float(60, 100, 0, 2)'),
      WriteOffDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      PaymentDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      FinancialDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      BusinessNumber:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      Creator:Mock.mock('@cname()'),
      CreateTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      Modifier:Mock.mock('@cname()'),
      ModifyTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      WriteOffSerialNumber:Mock.mock({'regexp': /HX\d{5,10}/}).regexp,
      IsVoucherGenerated:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Allocation:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      LockStatus:`${Object.values(Mock.mock({"object|1": {"未锁定": "未锁定","已锁定": "已锁定"}}).object)[0]}`,
      LockTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      DataSource:`${Object.values(Mock.mock({"object|1": {"操作录入": "操作录入","外部导入": "外部导入","自动生成":"自动生成","Excle导入":"Excel导入"}}).object)[0]}`,
      IsAdjustedFee:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      FeeModifier:Mock.mock('@cname()'),
      SettlementAgent:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      FeeSyncStatus:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      ModifyFeeApplicationProgress:Mock.mock({"string|1-10": "★"}).string,
      AllocationRelatedBusiness:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      AllocationType:`${Object.values(Mock.mock({"object|1": {"平均分配": "平均分配","按体积": "按体积","按重量": "按重量"}}).object)[0]}`,
      RelatedFeeId:Mock.mock("@id"),
      FeeId:Mock.mock("@id"),
      CreditDebit:`${Object.values(Mock.mock({"object|1": {"收": "收","支": "支"}}).object)[0]}`,
  },  
  {
      SettlementCompany:`${Object.values(Mock.mock({"object|1": {"青岛子公司": "青岛子公司","上海子公司": "上海子公司","深圳子公司": "深圳子公司","西安子公司": "西安子公司"}}).object)[0]}`,
      FeeName:`${Object.values(Mock.mock({"object|1": {"海运费": "海运费","空运费": "空运费","报关费": "报关费","仓储费": "仓储费"}}).object)[0]}`,
      SettlementType:`${Object.values(Mock.mock({"object|1": {"票结": "票结","月结": "月结","半月结": "半月结","周结": "周结"}}).object)[0]}`,
      SettlementObject:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      InvoiceTitle:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      DomesticForeign:`${Object.values(Mock.mock({"object|1": {"国内": "国内","国外": "国外"}}).object)[0]}`,
      NeedInvoice:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Currency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      ExchangeRate:Mock.mock('@float(1, 10, 0, 2)'),
      Unit:`${Object.values(Mock.mock({"object|1": {"箱数": "箱数","普通价": "普通价"}}).object)[0]}`,
      Quantity:Mock.mock('@float(60, 100, 0, 2)'),
      UnitPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxIncludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxExcludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxRate:Mock.mock('@float(60, 100, 0, 2)'),
      TaxAmount:Mock.mock('@float(60, 100, 0, 2)'),
      RmbEquivalent:Mock.mock('@float(60, 100, 0, 2)'),
      LocalCurrency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      Reviewer:Mock.mock('@cname()'),
      Remarks:Mock.mock('@ctitle(5)'),
      ContactPerson:Mock.mock('@cname()'),
      AssociatedBillNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      AssociatedContainerNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      PrepaidCollect:`${Object.values(Mock.mock({"object|1": {"预付": "预付","到付": "到付"}}).object)[0]}`,
      Status:`${Object.values(Mock.mock({"object|1": {"未提交": "未提交","已提交": "已提交","未审核":"未审核","已审核":"已审核","已归档":"已归档"}}).object)[0]}`,
      IsConfirmed:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      AgentSplitBillNumber:Mock.mock({'regexp': /AC\d{5,10}/}).regexp,
      BillNumber:Mock.mock({'regexp': /BN\d{5,10}/}).regexp,
      AccrualDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      InvoiceNumber:Mock.mock({'regexp': /RI\d{5,10}/}).regexp,
      InvoiceDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      CounterpartBillNumber:Mock.mock({'regexp': /CP\d{5,10}/}).regexp,
      PaymentApplicationNumber:Mock.mock({'regexp': /PR\d{5,10}/}).regexp,
      WriteOffAmount:Mock.mock('@float(60, 100, 0, 2)'),
      UnadjustedAmount:Mock.mock('@float(60, 100, 0, 2)'),
      WriteOffDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      PaymentDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      FinancialDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      BusinessNumber:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      Creator:Mock.mock('@cname()'),
      CreateTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      Modifier:Mock.mock('@cname()'),
      ModifyTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      WriteOffSerialNumber:Mock.mock({'regexp': /HX\d{5,10}/}).regexp,
      IsVoucherGenerated:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Allocation:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      LockStatus:`${Object.values(Mock.mock({"object|1": {"未锁定": "未锁定","已锁定": "已锁定"}}).object)[0]}`,
      LockTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      DataSource:`${Object.values(Mock.mock({"object|1": {"操作录入": "操作录入","外部导入": "外部导入","自动生成":"自动生成","Excle导入":"Excel导入"}}).object)[0]}`,
      IsAdjustedFee:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      FeeModifier:Mock.mock('@cname()'),
      SettlementAgent:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      FeeSyncStatus:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      ModifyFeeApplicationProgress:Mock.mock({"string|1-10": "★"}).string,
      AllocationRelatedBusiness:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      AllocationType:`${Object.values(Mock.mock({"object|1": {"平均分配": "平均分配","按体积": "按体积","按重量": "按重量"}}).object)[0]}`,
      RelatedFeeId:Mock.mock("@id"),
      FeeId:Mock.mock("@id"),
      CreditDebit:`${Object.values(Mock.mock({"object|1": {"收": "收","支": "支"}}).object)[0]}`,
  },  
  {
      SettlementCompany:`${Object.values(Mock.mock({"object|1": {"青岛子公司": "青岛子公司","上海子公司": "上海子公司","深圳子公司": "深圳子公司","西安子公司": "西安子公司"}}).object)[0]}`,
      FeeName:`${Object.values(Mock.mock({"object|1": {"海运费": "海运费","空运费": "空运费","报关费": "报关费","仓储费": "仓储费"}}).object)[0]}`,
      SettlementType:`${Object.values(Mock.mock({"object|1": {"票结": "票结","月结": "月结","半月结": "半月结","周结": "周结"}}).object)[0]}`,
      SettlementObject:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      InvoiceTitle:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      DomesticForeign:`${Object.values(Mock.mock({"object|1": {"国内": "国内","国外": "国外"}}).object)[0]}`,
      NeedInvoice:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Currency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      ExchangeRate:Mock.mock('@float(1, 10, 0, 2)'),
      Unit:`${Object.values(Mock.mock({"object|1": {"箱数": "箱数","普通价": "普通价"}}).object)[0]}`,
      Quantity:Mock.mock('@float(60, 100, 0, 2)'),
      UnitPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxIncludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxExcludedPrice:Mock.mock('@float(60, 100, 0, 2)'),
      TaxRate:Mock.mock('@float(60, 100, 0, 2)'),
      TaxAmount:Mock.mock('@float(60, 100, 0, 2)'),
      RmbEquivalent:Mock.mock('@float(60, 100, 0, 2)'),
      LocalCurrency:`${Object.values(Mock.mock({"object|1": {"人民币": "人民币","美元": "美元","欧元":"欧元","日元":"日元"}}).object)[0]}`,
      Reviewer:Mock.mock('@cname()'),
      Remarks:Mock.mock('@ctitle(5)'),
      ContactPerson:Mock.mock('@cname()'),
      AssociatedBillNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      AssociatedContainerNumber:Mock.mock({'regexp': /\d{5,10}/}).regexp,
      PrepaidCollect:`${Object.values(Mock.mock({"object|1": {"预付": "预付","到付": "到付"}}).object)[0]}`,
      Status:`${Object.values(Mock.mock({"object|1": {"未提交": "未提交","已提交": "已提交","未审核":"未审核","已审核":"已审核","已归档":"已归档"}}).object)[0]}`,
      IsConfirmed:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      AgentSplitBillNumber:Mock.mock({'regexp': /AC\d{5,10}/}).regexp,
      BillNumber:Mock.mock({'regexp': /BN\d{5,10}/}).regexp,
      AccrualDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      InvoiceNumber:Mock.mock({'regexp': /RI\d{5,10}/}).regexp,
      InvoiceDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      CounterpartBillNumber:Mock.mock({'regexp': /CP\d{5,10}/}).regexp,
      PaymentApplicationNumber:Mock.mock({'regexp': /PR\d{5,10}/}).regexp,
      WriteOffAmount:Mock.mock('@float(60, 100, 0, 2)'),
      UnadjustedAmount:Mock.mock('@float(60, 100, 0, 2)'),
      WriteOffDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      PaymentDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      FinancialDate:Mock.mock('@now(day, yyyy-MM-dd)'),
      BusinessNumber:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      Creator:Mock.mock('@cname()'),
      CreateTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      Modifier:Mock.mock('@cname()'),
      ModifyTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      WriteOffSerialNumber:Mock.mock({'regexp': /HX\d{5,10}/}).regexp,
      IsVoucherGenerated:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      Allocation:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      LockStatus:`${Object.values(Mock.mock({"object|1": {"未锁定": "未锁定","已锁定": "已锁定"}}).object)[0]}`,
      LockTime:Mock.mock('@now(day, yyyy-MM-dd)'),
      DataSource:`${Object.values(Mock.mock({"object|1": {"操作录入": "操作录入","外部导入": "外部导入","自动生成":"自动生成","Excle导入":"Excel导入"}}).object)[0]}`,
      IsAdjustedFee:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      FeeModifier:Mock.mock('@cname()'),
      SettlementAgent:`${Object.values(Mock.mock({"object|1": {"现代商船（中国）有限公司": "现代商船（中国）有限公司","中国东方航空公司": "中国东方航空公司","阿拉伯联合国家轮船公司": "阿拉伯联合国家轮船公司","长锦商船船务有限公司": "长锦商船船务有限公司"}}).object)[0]}`,
      FeeSyncStatus:`${Object.values(Mock.mock({"object|1": {"是": "是","否": "否"}}).object)[0]}`,
      ModifyFeeApplicationProgress:Mock.mock({"string|1-10": "★"}).string,
      AllocationRelatedBusiness:Mock.mock({'regexp': /BH\d{5,10}/}).regexp,
      AllocationType:`${Object.values(Mock.mock({"object|1": {"平均分配": "平均分配","按体积": "按体积","按重量": "按重量"}}).object)[0]}`,
      RelatedFeeId:Mock.mock("@id"),
      FeeId:Mock.mock("@id"),
      CreditDebit:`${Object.values(Mock.mock({"object|1": {"收": "收","支": "支"}}).object)[0]}`,
  },  
];
const feeNameItems:FeeNameItemProps[] = [
{
  FeeName:'海运费',
  FeeId:'F00001',
  FeeDisplayName:'[F00001]海运费',
},
{
  FeeName:'空运费',
  FeeId:'F00002',
  FeeDisplayName:'[F00002]空运费',
},
{
  FeeName:'铁运费',
  FeeId:'F00003',
  FeeDisplayName:'[F00003]铁运费',
},
{
  FeeName:'杂费',
  FeeId:'F00004',
  FeeDisplayName:'[F00004]杂费',
},
{
  FeeName:'仓储费',
  FeeId:'F00005',
  FeeDisplayName:'[F00005]仓储费',
},
{
  FeeName:'报关费',
  FeeId:'F00004',
  FeeDisplayName:'[F00004]报关费',
},
{
  FeeName:'仓储费',
  FeeId:'F00005',
  FeeDisplayName:'[F00005]仓储费',
},
{
  FeeName:'陆运费',
  FeeId:'F00006',
  FeeDisplayName:'[F00006]陆运费',
},
];
// 获取币制信息
export const getOrderFeeList = async () : Promise<OrderFeeItemProps[]> => {
  // const response = await request({
  //   method: "GET",
  //   url: "/order_fee"
  // });
  // const responseData = response?.data as ApiRes<OrderFeeItemProps[]>;
  // return responseData.data || [];
  return orderFeeItems;
}

export const getFeeNameList = async () : Promise<FeeNameItemProps[]> => {
  // const response = await request({
  //   method: "GET",
  //   url: "/fee_names"
  // });
  // const responseData = response?.data as ApiRes<FeeNameItemProps[]>;
  // return responseData.data || [];
  return feeNameItems;
}

export const saveOrderFee = (data:OrderFeeItemProps,onUploadProgress: (progress: number) => void) => {
  return requestWithProgress({
    method: 'POST',
    url: "/order_fee/save",
    data:data,
    onUploadProgress: (progress) => {
        onUploadProgress(progress);
    }
  })
}

