// src/mock/export_template.ts
import Mock from "mockjs";
var exportLogItems = [
  {
    SerialNo: 1,
    BatchNo: Mock.mock("@id"),
    ServiceName: "\u5E01\u5236\u8BE6\u60C5",
    TemplateName: "\u5E01\u5236\u8BE6\u60C5\u6D4B\u8BD5\u6A21\u677F\u4E00",
    ExportType: "\u5BFC\u51FA",
    ExportCount: "100",
    ExportStartDate: Mock.mock("@datetime"),
    ExportEndDate: Mock.mock("@datetime"),
    Status: 1,
    Operator: "admin",
    ExportFile: "\u5E01\u5236\u8BE6\u60C5.xlsx"
  },
  {
    SerialNo: 2,
    BatchNo: Mock.mock("@id"),
    ServiceName: "\u5E01\u5236\u8BE6\u60C5",
    TemplateName: "\u5E01\u5236\u8BE6\u60C5\u6D4B\u8BD5\u6A21\u677F\u4E00",
    ExportType: "\u5BFC\u51FA",
    ExportCount: "100",
    ExportStartDate: Mock.mock("@datetime"),
    ExportEndDate: Mock.mock("@datetime"),
    Status: 1,
    Operator: "admin",
    ExportFile: "\u5E01\u5236\u8BE6\u60C5.xlsx"
  },
  {
    SerialNo: 3,
    BatchNo: Mock.mock("@id"),
    ServiceName: "\u5E01\u5236\u8BE6\u60C5",
    TemplateName: "\u5E01\u5236\u8BE6\u60C5\u6D4B\u8BD5\u6A21\u677F\u4E00",
    ExportType: "\u5BFC\u51FA",
    ExportCount: "100",
    ExportStartDate: Mock.mock("@datetime"),
    ExportEndDate: Mock.mock("@datetime"),
    Status: 1,
    Operator: "admin",
    ExportFile: "\u5E01\u5236\u8BE6\u60C5.xlsx"
  },
  {
    SerialNo: 4,
    BatchNo: Mock.mock("@id"),
    ServiceName: "\u5E01\u5236\u8BE6\u60C5",
    TemplateName: "\u5E01\u5236\u8BE6\u60C5\u6D4B\u8BD5\u6A21\u677F\u4E00",
    ExportType: "\u5BFC\u51FA",
    ExportCount: "100",
    ExportStartDate: Mock.mock("@datetime"),
    ExportEndDate: Mock.mock("@datetime"),
    Status: 1,
    Operator: "admin",
    ExportFile: "\u5E01\u5236\u8BE6\u60C5.xlsx"
  }
];
var export_template_default = [
  // 导出日志列表
  {
    url: "/api/excel/export_log/list",
    method: "GET",
    response: () => {
      return {
        code: 200,
        success: true,
        message: "\u8BF7\u6C42\u6210\u529F\u3002",
        data: exportLogItems
      };
    }
  }
];
export {
  export_template_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsic3JjL21vY2svZXhwb3J0X3RlbXBsYXRlLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX2luamVjdGVkX2ZpbGVuYW1lX18gPSBcIkQ6XFxcXFdvcmtIb21lXFxcXHZpdGUtcHJvamVjdFxcXFxzcmNcXFxcbW9ja1xcXFxleHBvcnRfdGVtcGxhdGUudHNcIjtjb25zdCBfX2luamVjdGVkX2Rpcm5hbWVfXyA9IFwiRDpcXFxcV29ya0hvbWVcXFxcdml0ZS1wcm9qZWN0XFxcXHNyY1xcXFxtb2NrXCI7Y29uc3QgX19pbmplY3RlZF9pbXBvcnRfbWV0YV91cmxfXyA9IFwiZmlsZTovLy9EOi9Xb3JrSG9tZS92aXRlLXByb2plY3Qvc3JjL21vY2svZXhwb3J0X3RlbXBsYXRlLnRzXCI7aW1wb3J0IE1vY2sgZnJvbSBcIm1vY2tqc1wiO1xyXG5pbXBvcnQgeyBFeHBvcnRMb2dJdGVtIH0gZnJvbSBcIkAvdHlwZXMvYmFzaWNfbWFuYWdlLy9leHBvcnRfdGVtcGxhdGVcIjtcclxuLy8gXHU0RkVFXHU2QjYzaWNvblx1NzY4NFx1N0M3Qlx1NTc4Qlx1OTVFRVx1OTg5OFx1RkYwQ1x1NTZFMFx1NEUzQUpTWFx1NTE0M1x1N0QyMFx1NEUwRFx1ODBGRFx1NEY1Q1x1NEUzQUpTT05cdTVCRjlcdThDNjFcdTc2ODRcdTRFMDBcdTkwRThcdTUyMDZcdUZGMENcdThGRDlcdTkxQ0NcdTVERjJcdTdFQ0ZcdTY1MzlcdTRFM0FcdTVCNTdcdTdCMjZcdTRFMzJcclxuY29uc3QgZXhwb3J0TG9nSXRlbXM6RXhwb3J0TG9nSXRlbVtdID0gW1xyXG4gIHtcclxuICAgIFNlcmlhbE5vOiAxLFxyXG4gICAgQmF0Y2hObzogTW9jay5tb2NrKFwiQGlkXCIpLFxyXG4gICAgU2VydmljZU5hbWU6IFwiXHU1RTAxXHU1MjM2XHU4QkU2XHU2MEM1XCIsXHJcbiAgICBUZW1wbGF0ZU5hbWU6IFwiXHU1RTAxXHU1MjM2XHU4QkU2XHU2MEM1XHU2RDRCXHU4QkQ1XHU2QTIxXHU2NzdGXHU0RTAwXCIsXHJcbiAgICBFeHBvcnRUeXBlOiBcIlx1NUJGQ1x1NTFGQVwiLFxyXG4gICAgRXhwb3J0Q291bnQ6IFwiMTAwXCIsXHJcbiAgICBFeHBvcnRTdGFydERhdGU6IE1vY2subW9jayhcIkBkYXRldGltZVwiKSxcclxuICAgIEV4cG9ydEVuZERhdGU6IE1vY2subW9jayhcIkBkYXRldGltZVwiKSxcclxuICAgIFN0YXR1czogMSxcclxuICAgIE9wZXJhdG9yOiBcImFkbWluXCIsXHJcbiAgICBFeHBvcnRGaWxlOiBcIlx1NUUwMVx1NTIzNlx1OEJFNlx1NjBDNS54bHN4XCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBTZXJpYWxObzogMixcclxuICAgIEJhdGNoTm86IE1vY2subW9jayhcIkBpZFwiKSxcclxuICAgIFNlcnZpY2VOYW1lOiBcIlx1NUUwMVx1NTIzNlx1OEJFNlx1NjBDNVwiLFxyXG4gICAgVGVtcGxhdGVOYW1lOiBcIlx1NUUwMVx1NTIzNlx1OEJFNlx1NjBDNVx1NkQ0Qlx1OEJENVx1NkEyMVx1Njc3Rlx1NEUwMFwiLFxyXG4gICAgRXhwb3J0VHlwZTogXCJcdTVCRkNcdTUxRkFcIixcclxuICAgIEV4cG9ydENvdW50OiBcIjEwMFwiLFxyXG4gICAgRXhwb3J0U3RhcnREYXRlOiBNb2NrLm1vY2soXCJAZGF0ZXRpbWVcIiksXHJcbiAgICBFeHBvcnRFbmREYXRlOiBNb2NrLm1vY2soXCJAZGF0ZXRpbWVcIiksXHJcbiAgICBTdGF0dXM6IDEsXHJcbiAgICBPcGVyYXRvcjogXCJhZG1pblwiLFxyXG4gICAgRXhwb3J0RmlsZTogXCJcdTVFMDFcdTUyMzZcdThCRTZcdTYwQzUueGxzeFwiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgU2VyaWFsTm86IDMsXHJcbiAgICBCYXRjaE5vOiBNb2NrLm1vY2soXCJAaWRcIiksXHJcbiAgICBTZXJ2aWNlTmFtZTogXCJcdTVFMDFcdTUyMzZcdThCRTZcdTYwQzVcIixcclxuICAgIFRlbXBsYXRlTmFtZTogXCJcdTVFMDFcdTUyMzZcdThCRTZcdTYwQzVcdTZENEJcdThCRDVcdTZBMjFcdTY3N0ZcdTRFMDBcIixcclxuICAgIEV4cG9ydFR5cGU6IFwiXHU1QkZDXHU1MUZBXCIsXHJcbiAgICBFeHBvcnRDb3VudDogXCIxMDBcIixcclxuICAgIEV4cG9ydFN0YXJ0RGF0ZTogTW9jay5tb2NrKFwiQGRhdGV0aW1lXCIpLFxyXG4gICAgRXhwb3J0RW5kRGF0ZTogTW9jay5tb2NrKFwiQGRhdGV0aW1lXCIpLFxyXG4gICAgU3RhdHVzOiAxLFxyXG4gICAgT3BlcmF0b3I6IFwiYWRtaW5cIixcclxuICAgIEV4cG9ydEZpbGU6IFwiXHU1RTAxXHU1MjM2XHU4QkU2XHU2MEM1Lnhsc3hcIixcclxuICB9LFxyXG4gIHtcclxuICAgIFNlcmlhbE5vOiA0LFxyXG4gICAgQmF0Y2hObzogTW9jay5tb2NrKFwiQGlkXCIpLFxyXG4gICAgU2VydmljZU5hbWU6IFwiXHU1RTAxXHU1MjM2XHU4QkU2XHU2MEM1XCIsXHJcbiAgICBUZW1wbGF0ZU5hbWU6IFwiXHU1RTAxXHU1MjM2XHU4QkU2XHU2MEM1XHU2RDRCXHU4QkQ1XHU2QTIxXHU2NzdGXHU0RTAwXCIsXHJcbiAgICBFeHBvcnRUeXBlOiBcIlx1NUJGQ1x1NTFGQVwiLFxyXG4gICAgRXhwb3J0Q291bnQ6IFwiMTAwXCIsXHJcbiAgICBFeHBvcnRTdGFydERhdGU6IE1vY2subW9jayhcIkBkYXRldGltZVwiKSxcclxuICAgIEV4cG9ydEVuZERhdGU6IE1vY2subW9jayhcIkBkYXRldGltZVwiKSxcclxuICAgIFN0YXR1czogMSxcclxuICAgIE9wZXJhdG9yOiBcImFkbWluXCIsXHJcbiAgICBFeHBvcnRGaWxlOiBcIlx1NUUwMVx1NTIzNlx1OEJFNlx1NjBDNS54bHN4XCIsXHJcbiAgfSwgICBcclxuXTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFtcclxuICAvLyBcdTVCRkNcdTUxRkFcdTY1RTVcdTVGRDdcdTUyMTdcdTg4NjhcclxuICB7XHJcbiAgICB1cmw6IFwiL2FwaS9leGNlbC9leHBvcnRfbG9nL2xpc3RcIixcclxuICAgIG1ldGhvZDogXCJHRVRcIixcclxuICAgIHJlc3BvbnNlOiAoKSA9PiB7XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgY29kZTogMjAwLFxyXG4gICAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgICAgbWVzc2FnZTogXCJcdThCRjdcdTZDNDJcdTYyMTBcdTUyOUZcdTMwMDJcIixcclxuICAgICAgICBkYXRhOiBleHBvcnRMb2dJdGVtcyxcclxuICAgICAgfTtcclxuICAgIH0sXHJcbiAgfSxcclxuXTsiXSwKICAibWFwcGluZ3MiOiAiO0FBQW1RLE9BQU8sVUFBVTtBQUdwUixJQUFNLGlCQUFpQztBQUFBLEVBQ3JDO0FBQUEsSUFDRSxVQUFVO0FBQUEsSUFDVixTQUFTLEtBQUssS0FBSyxLQUFLO0FBQUEsSUFDeEIsYUFBYTtBQUFBLElBQ2IsY0FBYztBQUFBLElBQ2QsWUFBWTtBQUFBLElBQ1osYUFBYTtBQUFBLElBQ2IsaUJBQWlCLEtBQUssS0FBSyxXQUFXO0FBQUEsSUFDdEMsZUFBZSxLQUFLLEtBQUssV0FBVztBQUFBLElBQ3BDLFFBQVE7QUFBQSxJQUNSLFVBQVU7QUFBQSxJQUNWLFlBQVk7QUFBQSxFQUNkO0FBQUEsRUFDQTtBQUFBLElBQ0UsVUFBVTtBQUFBLElBQ1YsU0FBUyxLQUFLLEtBQUssS0FBSztBQUFBLElBQ3hCLGFBQWE7QUFBQSxJQUNiLGNBQWM7QUFBQSxJQUNkLFlBQVk7QUFBQSxJQUNaLGFBQWE7QUFBQSxJQUNiLGlCQUFpQixLQUFLLEtBQUssV0FBVztBQUFBLElBQ3RDLGVBQWUsS0FBSyxLQUFLLFdBQVc7QUFBQSxJQUNwQyxRQUFRO0FBQUEsSUFDUixVQUFVO0FBQUEsSUFDVixZQUFZO0FBQUEsRUFDZDtBQUFBLEVBQ0E7QUFBQSxJQUNFLFVBQVU7QUFBQSxJQUNWLFNBQVMsS0FBSyxLQUFLLEtBQUs7QUFBQSxJQUN4QixhQUFhO0FBQUEsSUFDYixjQUFjO0FBQUEsSUFDZCxZQUFZO0FBQUEsSUFDWixhQUFhO0FBQUEsSUFDYixpQkFBaUIsS0FBSyxLQUFLLFdBQVc7QUFBQSxJQUN0QyxlQUFlLEtBQUssS0FBSyxXQUFXO0FBQUEsSUFDcEMsUUFBUTtBQUFBLElBQ1IsVUFBVTtBQUFBLElBQ1YsWUFBWTtBQUFBLEVBQ2Q7QUFBQSxFQUNBO0FBQUEsSUFDRSxVQUFVO0FBQUEsSUFDVixTQUFTLEtBQUssS0FBSyxLQUFLO0FBQUEsSUFDeEIsYUFBYTtBQUFBLElBQ2IsY0FBYztBQUFBLElBQ2QsWUFBWTtBQUFBLElBQ1osYUFBYTtBQUFBLElBQ2IsaUJBQWlCLEtBQUssS0FBSyxXQUFXO0FBQUEsSUFDdEMsZUFBZSxLQUFLLEtBQUssV0FBVztBQUFBLElBQ3BDLFFBQVE7QUFBQSxJQUNSLFVBQVU7QUFBQSxJQUNWLFlBQVk7QUFBQSxFQUNkO0FBQ0Y7QUFFQSxJQUFPLDBCQUFRO0FBQUE7QUFBQSxFQUViO0FBQUEsSUFDRSxLQUFLO0FBQUEsSUFDTCxRQUFRO0FBQUEsSUFDUixVQUFVLE1BQU07QUFDZCxhQUFPO0FBQUEsUUFDTCxNQUFNO0FBQUEsUUFDTixTQUFTO0FBQUEsUUFDVCxTQUFTO0FBQUEsUUFDVCxNQUFNO0FBQUEsTUFDUjtBQUFBLElBQ0Y7QUFBQSxFQUNGO0FBQ0Y7IiwKICAibmFtZXMiOiBbXQp9Cg==
